<chapter id="ljp.int.memcache_keys">

<title>&memcached; data - storage &amp; identification</title>

<blockquote><abstract><para>
Data stored by &memcached; is identified with the help of a key. A key
is a text string which should uniquely identify the data for clients
that are interested in storing and retrieving it.</para></abstract></blockquote>


    <section id="ljp.int.memcache_keys_format">
    <title>data storage format: keys</title>

    <para>
    Currently the length limit of a key is set at 250 characters (of course, normally
    clients wouldn&apos;t need to use such long keys); the key must not include
    control characters or whitespace.</para>
    <para>The format for keys is listed below. For more information on keys,
    and how to use them, please see the &memcached;
    <ulink url="http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt">protocol docs</ulink>.
    You can find a list of &lj; &memcached; keys at <xref linkend="ljp.int.memcache_keys_list" />.</para>
    
    <programlisting>&lt;command name&gt; &lt;key&gt; &lt;flags&gt; &lt;exptime&gt; &lt;bytes&gt;\r\n</programlisting>
    
    <variablelist>
    
    <varlistentry><term>&lt;key&gt;</term>
    <listitem>
    <para>The key under which the client asks to store the data.</para>
    </listitem>
    </varlistentry>
    
    <varlistentry><term>&lt;flags&gt;</term>
    <listitem>
    <para>An arbitrary 16-bit unsigned integer (written out in
    decimal) that the server stores along with the data and sends back
    when the item is retrieved. Clients may use this as a bit field to
    store data-specific information; this field is opaque to the server.
    Note that in &memcached; 1.2.1 and higher, flags may be 32-bits, instead
    of 16, but you might want to restrict yourself to 16 bits for
    compatibility with older versions.</para>
    </listitem>
    </varlistentry>
    
    <varlistentry><term>&lt;exptime&gt; </term>
    <listitem>
    <para>Expiration time. If it is 0, the item never expires
    (although it may be deleted from the cache to make place for other
    items). If it's non-zero (either &unix; time or offset in seconds from
    current time), it is guaranteed that clients will not be able to
    retrieve this item after the expiration time arrives (measured by
    server time).</para>
    </listitem>
    </varlistentry>
    
    <varlistentry><term>&lt;bytes&gt; </term>
    <listitem>
    <para>The number of bytes in the data block to follow, 
    <emphasis>not</emphasis> including 
    the delimiting \r\n. &lt;bytes&gt; may be zero (in which case
    it&apos;s followed by an empty data block).
    </para>
    </listitem>
    </varlistentry>
    </variablelist>
    </section>

&ljp.int.memcache_keys_list;

</chapter>
