<chapter id="ljp.int.portal_modules">

<title>Portal Modules</title>

<subtitle>Introduction &mdash; Everything you wanted to know about portal modules but were afraid to ask.</subtitle>

<formalpara><title>What is the minimum I need to do to write a portal box?</title>
<para>Subclass LJ::Portal::Box and override these methods:</para>
</formalpara>

<informaltable>
<tgroup cols="2">
<tbody>
<row>
<entry>LJ::Portal::Box::initialize()</entry>
<entry>Called when class is instantiated. Good place to set things up</entry>
</row>
<row>
<entry>LJ::Portal::Box::generate_content()</entry>
<entry>Return &html; to be displayed in the box</entry>
</row>
<row>
<entry>LJ::Portal::Box::box_description()</entry>
<entry>A short description of the module for the user</entry>
</row>
<row>
<entry>LJ::Portal::Box::box_name()</entry>
<entry>Short title to be displayed</entry>
</row>
<row>
<entry>LJ::Portal::Box::box_class()</entry>
<entry>Both &css; class and perl class of the module</entry>
</row>
<row>
<entry>LJ::Portal::Box::box_class()</entry>
<entry>Both &css; class and perl class of the module</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para><emphasis role='strong'>Optional methods</emphasis>:</para>

<informaltable>
<tgroup cols="2">
<tbody>
<row>
<entry>LJ::Portal::Box::can_refresh()</entry>
<entry>Show a little refresh box button</entry>
</row>
<row>
<entry>LJ::Portal::Box::config_props()</entry>
<entry>Hashref of options the user can configure. See below.</entry>
</row>
<row>
<entry>LJ::Portal::Box::prop_keys()</entry>
<entry>Hashref of config name => prop id # (can be any number)</entry>
</row>
<row>
<entry>LJ::Portal::Box::handle_request($GET, $POST)</entry>
<entry>If you want your module to be interactive, you can do GETs or POSTs
with portalboxaction=$pboxid set to get this method called. 
Return &js; to execute or undef to just have the box be updated</entry>
</row>
<row>
<entry>LJ::Portal::Box::default_added($u)</entry>
<entry>If this returns true, then this box should be added by default</entry>
</row>
<row>
<entry>LJ::Portal::Box::box_updated()</entry>
<entry>This is called when the box is reloaded on the page, and any &js;
it returns will be executed</entry>
</row>
<row>
<entry>LJ::Portal::Box::cache_global</entry>
<entry>Return 1 if box contents should be cached globally, otherwise contents
cached per-user (if the cache functions are defined)</entry>
</row>
<row>
<entry>LJ::Portal::Box::cache_time</entry>
<entry>How long (in seconds) before comparing etags to determine if the content
needs to be re-generated</entry>
</row>
<row>
<entry>LJ::Portal::Box::etag</entry>
<entry>A tag which is easily calculated which reflects the current state of the box,
used to determine if the box cache is out of date</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para><emphasis role='strong'>config_props</emphasis> &mdash; hashref with the following options:</para>

<informaltable>
<tgroup cols="2">
<tbody>
<row>
<entry>type</entry>
<entry>checkbox, dropdown, integer, hidden</entry>
</row>
<row>
<entry>desc</entry>
<entry>translation string that describes the prop</entry>
</row>
<row>
<entry>default</entry>
<entry>default state</entry>
</row>
<row>
<entry>min/max</entry>
<entry>integer min/max values</entry>
</row>
<row>
<entry>items</entry>
<entry>hashref of options for dropdown menu</entry>
</row>
<row>
<entry>maxlength</entry>
<entry>textfield maxlength</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para><emphasis role="strong">Methods and fields available to modules:</emphasis></para>

<informaltable>
<tgroup cols="2">
<tbody>
<row>
<entry>get_prop(propname)</entry>
<entry>return the value for a box property</entry>
</row>
<row>
<entry>set_prop(propname)</entry>
<entry>set &quot; &quot;</entry>
</row>
<row>
<entry>pboxid()</entry>
<entry>this box&apos;s <acronym>ID</acronym></entry>
</row>
<row>
<entry>sortorder()</entry>
<entry>what order this box is in its column</entry>
</row>
<row>
<entry>set_default_props()</entry>
<entry>reset all props to their default state</entry>
</row>
<row>
<entry>delete_prop(propid)</entry>
<entry>delete prop by id</entry>
</row>
<row>
<entry>set_props(props)</entry>
<entry>hashref of props by propname =&gt; value to set</entry>
</row>
</tbody>
</tgroup>
</informaltable>
 
<tip><para>Handy &js;:</para>
<simpara>evalXrequest(str) send an &xml; &http; POST request, usually to be handled by handle_request
and do a <abbrev>JS</abbrev> eval of what is returned.</simpara></tip>

</chapter>

