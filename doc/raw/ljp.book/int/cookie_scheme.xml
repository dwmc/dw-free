<chapter id="ljp.int.cookie_scheme">

<title>Cookie Scheme</title>

<formalpara><title>Old cookie format:</title>

<para><synopsis>
*.$LJ::DOMAIN = ws:&lt;user&gt;:&lt;sessid&gt;:&lt;auth&gt;:&lt;flags&gt;
</synopsis></para></formalpara>

<itemizedlist>
<listitem><para>Insecure.</para>  </listitem>
<listitem><para>Own one cookie, own an account.</para></listitem>
<listitem><para>But, still used if <link linkend="ljconfig.only_user_vhosts">$LJ::ONLY_USER_VHOSTS</link>
is <emphasis>not</emphasis> enabled.</para></listitem>
</itemizedlist>

<formalpara><title>New cookie format:</title>
<para><synopsis>
2 + n cookies
</synopsis></para></formalpara>

<para>The <emphasis>2</emphasis> cookies work like this:</para>

<variablelist>
    <varlistentry><term>ljmastersession</term>
    
    <listitem><para>
        
        <itemizedlist>
        <listitem><para>Master session cookie. We control this one tightly.</para></listitem>
        <listitem><para>Bound to: www.$LJ::DOMAIN.  No user content is on www.*</para></listitem>
        </itemizedlist>

        <itemizedlist>
        <listitem><para>
        <emphasis role='strong'>Format:</emphasis> <synopsis>
        v&lt;version&gt;:u&lt;uid&gt;:s&lt;sessionid&gt;:a&lt;auth&gt;:f&lt;flags&gt;//&lt;generation/poetry&gt;
        </synopsis>

            <itemizedlist>
            <listitem><para>The <literal>version</literal> number is a code-wise version number.</para></listitem>
            <listitem><para><literal>uid</literal> is used now, now instead of <literal>user</literal>.</para></listitem>
            <listitem><para><literal>session</literal>/<literal>auth</literal>/<literal>flags</literal> all work as before.</para></listitem>
            <listitem><para><literal>generation/poetry</literal> is free-form text/poetry, so you can write a haiku and 
            go after people for subverting security to steal copyrighted, perhaps poetic, material.</para></listitem>
            </itemizedlist>
        
        </para></listitem>
        </itemizedlist>

    </para></listitem>
    
    </varlistentry>

<varlistentry><term>ljloggedin</term>

<listitem><para>The <quote>I&apos;m logged in!</quote> cookie. This one
advertised to all subdomains that the user is logged in. If it is stolen, it does not matter.
It is only used to bridge the two cookies. It is useless by itself.</para>
<para>Form: not present (not logged in), or:</para>
<para><synopsis>
u&lt;uid&gt;:s&lt;sessionid&gt;
</synopsis></para>
</listitem>
</varlistentry>
</variablelist>

<para>The <emphasis><replaceable>n</replaceable></emphasis> cookies work like this:</para>

<para>The <quote>n</quote> cookies are 1-per-user account.  They are bound
to &lt;subdomain&gt;.$LJ::DOMAIN optionally with a path=/username/ restriction
when &lt;subdomain&gt; is not a username, and is
actually <quote>users</quote> or <quote>communities</quote>.</para>

<para><screen><quote>ljdomsess.&lt;subdomain&gt;</quote> or ljdomsess.bob
<quote>ljdomsess.&lt;subdomain&gt;.&lt;user&gt;</quote> or ljdomsess.community.knitting
ljdomsess.users._underscoreman</screen></para>

<para>The format of this cookie is:</para>
<synopsis>
v&lt;version&gt;:u&lt;userid&gt;:s&lt;sessid&gt;:t&lt;unixtimestamp&gt;:g&lt;signature&gt;//&lt;gen/poetry&gt;
</synopsis>

<para>Where:</para>

<itemizedlist>
<listitem><para><literal>t</literal> = &unix; timestamp updated from LJ::get_secret(),
&lj;&apos;s rolling server-secret that is updated every 30/60 minutes.
This <literal>t</literal> value is the key into which server secret we are using.</para></listitem>
<listitem><para><synopsis>
<literal>g</literal> = HMAC-SHA1(key = server-secret(t),
            value = JOIN(&quot;-&quot;, session-auth(u, sessid), domain, uid, sessid, time))
</synopsis></para>
</listitem>
</itemizedlist>

<para>So, cookie is valid if:</para>
<itemizedlist>
<listitem>
<para><literal>v</literal> is supported version</para>
</listitem>
<listitem>
<para><literal>gen/poetry</literal> is current generation/poetry in 
<literal>$LJ::COOKIE_GEN_POETRY</literal></para>
</listitem>
<listitem>
<para><literal>session</literal>(uid, sessid) is still valid/logged in</para>
</listitem>
<listitem>
<para><literal>g</literal> is correct signature</para>
</listitem>
<listitem>
<para><literal>t</literal> is not older than <replaceable>$N</replaceable> hours (48?)</para>
</listitem>
</itemizedlist>

<para>The cookie should expire every 24 hours.</para>

<para>Future: cookies are bound to first two octets of <acronym>IP</acronym> address.</para>

<procedure><title>Cookie re-direction</title>
<step><para>If cookie is not present, but ljloggedin=1 cookie is present, then redirect user to:</para>
<para><uri>http://www.$LJ::DOMAIN/set-domain-cookie.bml?redir=&lt;source_url&gt;</uri></para></step>

<step><para>which will make a <quote>ljdomsess_*</quote> cookie, then redirect them to:</para>

<para><uri>http://subdomain.$LJ::DOMAIN/__setcookie?redir=&lt;source_url&gt;&amp;domsess=&lt;domsess_cookie&gt;
</uri></para></step>

<step><para>which will then redirect them to &lt;source_url&gt;.</para></step></procedure>


<formalpara><title>Mapping to Paths</title>
<para>
<link linkend="ljp.api.lj.get_remote">LJ::get_remote()</link> needs to be
modified to respect the right cookie based on the current hostname.</para>
</formalpara>

<para>For <filename>talkscreen.bml</filename> or any &xml;HTTPRequest that
goes to a userdomain, that endpoint has to make sure it only operates on data
owned by the current hostname/path.</para>

    <!-- Want to use informalexample here, so don't have to use title/id in example; a ((formal(example) is listed in ToC.
    But DocBook DTD is picky with task and its related elements. -->

<task id="task-ljp-cookie_steal"><title>Cookie Permissions</title>
<procedure>
<step><para><uri><replaceable>attacker.lj.com</replaceable></uri> does malicious style.</para></step>
<step>
<para>goodguy visits <uri><replaceable>attacker.lj.com</replaceable></uri>, gets ljdomsess stolen.</para>
</step>
</procedure>

<taskrelated>
<para>Attacker <emphasis role='strong'>should not</emphasis> be able to use 
goodguy&apos;s ljdomsess cookie to manipulate goodguy&apos;s data using, say, 
<filename>delcomment.bml</filename> with args
of <replaceable>?user=goodguy&amp;jtalkid=&lt;commentid&gt;</replaceable>.</para>
<para><filename>delcomment.bml</filename> and other endpoints should verify that
the <replaceable>user=&lt;user&gt;</replaceable> argument matches the
current hostname/path.</para>
<para>This means: <replaceable>&lt;sub&gt;.lj.com/&lt;user&gt;</replaceable> should
do &xml;HTTPRequests not to <replaceable>&lt;sub&gt;.lj.com/endpoint.bml</replaceable>, but
to <replaceable>&lt;sub&gt;.lj.com/&lt;user&gt;/endpoint.bml</replaceable> (otherwise ambiguous).</para>
</taskrelated>
</task>

</chapter>

