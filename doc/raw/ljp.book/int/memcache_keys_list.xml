<section id="ljp.int.memcache_keys_list">
<title>&memcached; keys reference</title>

<para>
<informaltable>
<tgroup cols="5" align="center">
<thead><row><entry>HashVal</entry><entry>Key</entry><entry>ValueFormat</entry><entry>Scope</entry><entry>Notes</entry></row></thead>
<tbody>
    <row>
        <entry>uid</entry>
        <entry>tags:&lt;uid&gt;</entry>
        <entry>{ tagid =&gt; { **tag info hashref, see <link linkend="ljp.api.lj.tags.get_usertags"><function>LJ::Tags::get_usertags</function></link>** } }</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>sess:&lt;uid&gt;:&lt;sessid&gt;</entry>
        <entry><link linkend="ljp.dbschema.sessions"><database class="table">sessions</database></link>
        row hashref</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>bio:&lt;uid&gt;</entry>
        <entry>user bio text</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>bio:&lt;uid&gt;</entry>
        <entry>user bio text</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>bio:&lt;uid&gt;</entry>
        <entry>user bio text</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>kws:&lt;uid&gt;</entry>
        <entry>{ kwid => keyword }; hashref of keyword <abbrev>ID</abbrev>s and keywords</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talkprop:&lt;uid&gt;:&lt;jtalkid&gt;</entry>
        <entry>{ propname => $value, &hellip; }</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talksubject:&lt;cid&gt;:&lt;uid&gt;:&lt;jtalkid&gt;</entry>
        <entry>scalar</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talkbody:&lt;cid&gt;:&lt;uid&gt;:&lt;jtalkid&gt;</entry>
        <entry>scalar</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talk2:&lt;uid&gt;:&lt;nodetype&gt;:&lt;nodeid&gt;</entry>
        <entry>packed data</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talk2row:&lt;uid&gt;:&lt;jtalkid&gt;</entry>
        <entry>packed data</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talk2ct:&lt;uid&gt;</entry>
        <entry># rows for user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>talkleftct:&lt;uid&gt;</entry>
        <entry># rows for user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>logtext:&lt;cid&gt;:&lt;uid&gt;:&lt;jitemid&gt;</entry>
        <entry>[ subject, text ]</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>logprop:&lt;uid&gt;:&lt;jitemid&gt;</entry>
        <entry>{ propname =&gt; $value, &hellip; }</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>logtag:&lt;uid&gt;:&lt;jitemid&gt;</entry>
        <entry>[ kwid, kwid, kwid, &hellip; ]</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>log2:&lt;uid&gt;:&lt;jitemid&gt;</entry>
        <entry>packed data</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>log2ct:&lt;uid&gt;</entry>
        <entry># of rows for user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>log2lt:&lt;uid&gt;</entry>
        <entry>packed data: array of recent <link linkend="ljp.dbschema.log2"><database class="table">log2</database></link>
        entries in rlogtime order, last 2 weeks by default</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>rp:&lt;uid&gt;:&lt;jitemid&gt;</entry>
        <entry>scalar, the replycount value</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>memkwid:&lt;uid&gt;</entry>
        <entry>hashref of <quote>memories</quote> keyword <abbrev>ID</abbrev>s to keywords</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>memkwcnt:&lt;uid&gt;:&lt;w|t&gt;:&lt;f|v|u&gt;</entry>
        <entry>hashref of <quote>memories</quote> keyword <abbrev>ID</abbrev>s to keyword counts.
        &lt;w|t&gt; is filter oWner|oTher.  &lt;f|v|u&gt; is security Friends|priVate|pUblic</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>dayct:&lt;uid&gt;</entry>
        <entry>arrayref of arrayrefs (see LJ::get_daycounts)</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>auc:&lt;uid&gt;:&lt;dom&gt;</entry>
        <entry>last <abbrev>ID</abbrev> from LJ::alloc_user_counter() for $uid/$domain</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>themeid</entry>
        <entry>moodthemedata:&lt;themeid&gt;</entry>
        <entry>{ $moodid =&gt; { 'pic' =&gt; $pic, 'w' =&gt; $w, 'h' =&gt; $h } }</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>s1overr:&lt;uid&gt;</entry>
        <entry>overrides for a given user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>s1uc:&lt;uid&gt;</entry>
        <entry><link linkend="ljp.dbschema.s1usercache"><database class="table">s1usercache</database></link>
        row hashref</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>s1pubstyc</entry>
        <entry>hashref keyed on styleid with values being rows
        from <link linkend="ljp.dbschema.s1style"><database class="table">s1style</database></link> table</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>styleid</entry>
        <entry>s1styc:&lt;styleid&gt;</entry>
        <entry><link linkend="ljp.dbschema.s1stylecache"><database class="table">s1stylecache</database></link>
        row hashref, 30 minutes</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>styleid</entry>
        <entry>s1style:&lt;styleid&gt;</entry>
        <entry>hashref of <link linkend="ljp.dbschema.s1style"><database class="table">s1style</database></link>
        row, without formatdata</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>styleid</entry>
        <entry>s1style_all:&lt;styleid&gt;</entry>
        <entry>hashref of <link linkend="ljp.dbschema.s1style"><database class="table">s1style</database></link>
        row, including formatdata</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row><row>
        <entry>styleid</entry>
        <entry>s1stylemap: &lt;styleid&gt;</entry>
        <entry>userid who owns the given styleid</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>styleid</entry>
        <entry>s2sl:&lt;styleid&gt;</entry>
        <entry>hashref of
        <link linkend="ljp.dbschema.s2stylelayers"><database class="table">s2stylelayers</database></link>
        { type =&gt; s2lid }</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>styleid</entry>
        <entry>s2s:&lt;styleid&gt;</entry>
        <entry>hashref of <link linkend="ljp.dbschema.s2styles"><database class="table">s2styles</database></link>
        row</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>s2publayers</entry>
        <entry>memoize LJ::S2::get_public_layers for 10 mins</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>layerid</entry>
        <entry>s2lo:&lt;layerid&gt;</entry>
        <entry>userid of the owner of this layer</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>layerid</entry>
        <entry>s2c:&lt;layerid&gt;</entry>
        <entry>arrayref; [ compile time, compiled data (or 0 meaning no data) ]</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>checkfriends:&lt;uid&gt;:&lt;mask&gt;</entry>
        <entry>scalar maxupdate, expires after refresh interval</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>frgmask:&lt;uid&gt;:&lt;uid_friend&gt;</entry>
        <entry>scalar numeric mask, 15 minutes</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>fgrp:&lt;uid&gt;</entry>
        <entry>packed data, <link linkend="ljp.dbschema.friendgroup"><database class="table">friendgroup</database></link>
        rows for a given user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>friends:&lt;uid&gt;</entry>
        <entry>packed data, <link linkend="ljp.dbschema.friends"><database class="table">friends</database></link>
        rows for a user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>friendofs:&lt;uid&gt;</entry>
        <entry>packed data, friendofs for a user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>tu:&lt;uid&gt;</entry>
        <entry>packed number: unixtime when user last updated</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>popsyn</entry>
        <entry>100 most read syndicated accounts [user, userid, synurl, numreaders], 1 <abbrev>hr</abbrev></entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>popsyn_ids</entry>
        <entry>1000 most read syndicated accounts, list of userids, 1 hour</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>pop_interests</entry>
        <entry>array of interest keywords and counts</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>friends2:&lt;uid&gt;</entry>
        <entry>packed data. total # of friends for a user, with friend userids</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>friendofs2:&lt;uid&gt;</entry>
        <entry>packed data. total # of friendofs for a user, with friendof userids</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>tc:&lt;uid&gt;</entry>
        <entry>unixtime when the user created their account</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>sysban:ip</entry>
        <entry>hashref of <abbrev>IP</abbrev> =&gt; &unix; expiration time</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>sysban:uniq</entry>
        <entry>hashref of uniq =&gt; &unix; expiration time</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>sysban:contentflag</entry>
        <entry>hashref of username =&gt; &unix; expiration time</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>userpic2:&lt;uid&gt;</entry>
        <entry>arrayref of hashrefs of
        <link linkend="ljp.dbschema.userpic2"><database class="table">userpic2</database></link>
        rows</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>picid</entry>
        <entry>userpic.&lt;picid&gt;</entry>
        <entry>hashref-as-arrayref (arrayfmt: &apos;userpic&apos; in LJ::MemCache)</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>upicinf:&lt;uid&gt;</entry>
        <entry>packed data, userpic keywords</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>upiccom:&lt;uid&gt;</entry>
        <entry>packed data, userpic comments</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>upicurl:&lt;uid&gt;</entry>
        <entry>packed data, userpic &url;s</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>picid</entry>
        <entry>mogp.up.&lt;picid&gt;</entry>
        <entry>arrayref of paths (&url;s)</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>rate_eperr:&lt;email_address&gt;</entry>
        <entry>rate limiting errors sent via &email; for &email; gateway</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>rate:tracked:&lt;userid&gt;</entry>
        <entry>cluster tracking on login, posts, and comments</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>ml.&lt;lang&gt;.&lt;dmid&gt;.&lt;code&gt;</entry>
        <entry></entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>includefile:&lt;name&gt;</entry>
        <entry>text of &bml; include file</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>intid</entry>
        <entry>introw:&lt;intid&gt;</entry>
        <entry>arrayref of [ $intid, $interest, $intcount ]</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>intids:&lt;uid&gt;</entry>
        <entry>arrayref of intids for this userid</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>rel:&lt;uid&gt;:&lt;targetid&gt;:&lt;rel&gt;</entry>
        <entry>[{0|1}, as_of_time]</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>relmodu:&lt;uid&gt;:&lt;rel&gt;</entry>
        <entry>as_of_time, updated when rel edges of uid change</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>targetid</entry>
        <entry>relmodt:&lt;targetid&gt;:&lt;rel&gt;</entry>
        <entry>as_of_time, updated when rel edges of targetid change</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>reluser:&lt;uid&gt;:&lt;rel&gt;</entry>
        <entry>arrayref of userids on the right side of this rel</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>memct:&lt;uid&gt;</entry>
        <entry>number of <quote>memories</quote> user has</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>lastcomm:&lt;uid&gt;</entry>
        <entry><abbrev>id</abbrev> of the last comment the user posted via QuickReply</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>prtcfg:&lt;uid&gt;</entry>
        <entry>arrayref of the portal box configuration for this userid</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>prtbox:&lt;uid&gt;:&lt;pboxid&gt;</entry>
        <entry>arrayref of the state of a LJ::Portal::Box object</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>prtconu:&lt;uid&gt;:&lt;pboxid&gt;</entry>
        <entry>[etag, maxtime, html] - per-user box content caching</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>typeid</entry>
        <entry>prtcong:&lt;typeid&gt;</entry>
        <entry>[etag, maxtime, html] - global box content caching</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>saui:&lt;uid&gt;</entry>
        <entry>{ schoolid =&gt; { year_start =&gt; &hellip;, year_end =&gt; &hellip; } }</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>schoolid</entry>
        <entry>saal:&lt;schoolid&gt;</entry>
        <entry>[ userid, &hellip; ]; userids at a school</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>schoolid</entry>
        <entry>saaly:&lt;schoolid&gt;:&lt;year&gt;</entry>
        <entry>[ userid, &hellip; ]; userids at a school in this year</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>schoolid</entry>
        <entry>sasi:&lt;schoolid&gt;</entry>
        <entry>hashref; keys: name, country, state, city, url</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>saccs</entry>
        <entry>{ country_code =&gt; country_name}; countries with schools</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>sascs:&lt;country_code&gt;</entry>
        <entry>{ state_code =&gt; state_name }; states with schools</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>pendid</entry>
        <entry>sapiu:&lt;pendid&gt;</entry>
        <entry>userid of person editing this pending row</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>saact</entry>
        <entry>number of approved schools in &db;; cached for admins</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>sapct</entry>
        <entry>pending schools to be processed count; cached for admins</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>uactive:&lt;type&gt;:&lt;uid&gt;</entry>
        <entry>unixtime user last active for a given type of activity</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uniq</entry>
        <entry>loginout:&lt;uniq&gt;</entry>
        <entry>set to 1, expires in five seconds, denotes user just logged in or out and is going through a redirect</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>inbox:&lt;uid&gt;</entry>
        <entry>list of qids for a user&apos;s notification inbox</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>inbox:newct:&lt;uid&gt;</entry>
        <entry>count of new messages in inbox</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>jabpresence:&lt;uid&gt;:&lt;reshash&gt;</entry>
        <entry>hash of jabber presence information for a particular userid/reshash pair</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>jabuser:&lt;uid&gt;</entry>
        <entry>hash of jabber resources for this user, keyed on resource name</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>jabclusteraddr:&lt;address&gt;</entry>
        <entry>address of server</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>jabclusterid:&lt;id&gt;</entry>
        <entry>id of server</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>email:&lt;uid&gt;</entry>
        <entry>&email; of user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>pw:&lt;uid&gt;</entry>
        <entry>password of user</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>embedcont:&lt;uid&gt;:&lt;moduleid&gt;</entry>
        <entry>embed module content</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>frbdays:&lt;uid&gt;:&lt;timespan&gt;</entry>
        <entry>friends birthdays for timespan, either <quote>full</quote> or number of months in the future</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>rcntalk:&lt;uid&gt;:&lt;maxshow&gt;</entry>
        <entry>recent talkitems cached on user, cache on number of talkitems to get</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>uid</entry>
        <entry>timezone_guess:&lt;uid&gt;</entry>
        <entry>guess of the user&apos;s timezone offset based on time of their most recent entry</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>vertid</entry>
        <entry>vert:&lt;vertid&gt;</entry>
        <entry>row from <quote>vertical</quote> table</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>verticalfeedentries:&lt;vertid&gt;</entry>
        <entry>arrayref of feed entries that are being displayed for the given vertical id</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>vertname</entry>
        <entry>vertname:&lt;vertname&gt;</entry>
        <entry>row from <quote>vertical</quote> table. Holds same info as
        <quote>vert</quote> &memcached; key, just keys on name instead of id</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry>vertid</entry>
        <entry>vertentries:&lt;vertid&gt;</entry>
        <entry>array of [ journalid, jitemid ] arrayrefs which should appear in vertical</entry>
        <entry>livejournal</entry>
        <entry></entry>
    </row>
    <row>
        <entry></entry>
        <entry>qotd:&lt;type&gt;</entry>
        <entry><acronym>QotD</acronym>s of the type &lt;type&gt; (&apos;current&apos; or &apos;old&apos;)</entry>
        <entry>livejournal</entry>
        <entry>Widget</entry>
    </row>
    <row>
        <entry></entry>
        <entry>sitemessages</entry>
        <entry>site messages</entry>
        <entry>livejournal</entry>
        <entry>Widget</entry>
    </row>
    <row>
        <entry></entry>
        <entry>blockwatch_ids</entry>
        <entry>hash of blockwatch <abbrev>ID</abbrev>s mapped to names</entry>
        <entry>livejournal</entry>
        <entry>Widget</entry>
    </row>
    <row>
        <entry></entry>
        <entry>blockwatch_names</entry>
        <entry>hash of blockwatch names mapped to <abbrev>ID</abbrev>s</entry>
        <entry>livejournal</entry>
        <entry>Widget</entry>
    </row>
    <row>
        <entry></entry>
        <entry>ct_flag_locked</entry>
        <entry>array of locked content flag <abbrev>ID</abbrev>s</entry>
        <entry>livejournal</entry>
        <entry>Widget</entry>
    </row>
    <row>
        <entry></entry>
        <entry>ct_flag_cat_count</entry>
        <entry>hash of content flag counts</entry>
        <entry>livejournal</entry>
        <entry>Widget</entry>
    </row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>

