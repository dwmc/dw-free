<chapter id="lj.customize.layout">
  <title>&bml; Schemes</title>
  <subtitle>Changing your site&apos;s layout</subtitle>
  <para>
    &bml; is the language used to serve pages to users that they don&apos;t manage
    themselves. To get an idea of what &bml; is, the following is a quote from the
    &bml; manual:
    <blockquote>
      <attribution><citetitle pubwork="book">The Better Markup Language</citetitle></attribution>
      <simpara>
        &bml; is a server-side markup language that lets you define your own
        &bml; blocks and use them as templates within your &bml;
        pages. Your templates don&apos;t even have to be static. Because &bml; pages are
        converted to &html; on the server when users request them, this also enables
        you to embed live code within your &bml; pages, just like a
        <abbrev>CGI</abbrev> script.
      </simpara>
    </blockquote>
  </para><para>
    With &lj;, we used &bml; because it makes it easier for us to write the
    layouts that comprise &lj;, without requiring frequent changes or rewrites on our part
    to come up with a customized look and feel. In the next section you will read how to make the
    necessary additions to the &lj; schemes to tailor your &lj; installation to your
    exact needs.
  </para>
  <para>For more information on &bml;, please refer to <xref linkend="bml.index" />.</para>
  <section id="lj.customize.layout.new">
    <title>Writing a &bml; Scheme</title>
    <para>
      &bml; is essentially a simple macro language. Macros are called
      <wordasword>templates</wordasword> in &bml;. Templates are defined in
      <wordasword>lookup</wordasword> files and are <wordasword>invoked</wordasword> in
      &bml; files. Templates accept parameters and are divided into several types
      according to how parameters are transmitted and how the definition of the template is able to make
      use of them. Definitions of templates are essentially chunks of &html; with
      potentially more recursive &bml; template invocations inside them.
    </para><para>
      For &lj;, the most common templates are defined in the file
      <filename>&envarljhome;/cgi-bin/bml/scheme/global.look</filename>; all other
      <wordasword>schemes</wordasword> either replace all of the templates, or inherit whichever
      is not replaced.
    </para><para>
      To write your own scheme, all you have to do is write your own
      &bml; lookup file that uses the same templates
      as <filename>&envarljhome;/cgi-bin/bml/global.look</filename>.
      Then, implementing a new scheme becomes pretty painless:</para>
      <procedure><title>Creating a new &bml; scheme: <replaceable>foo</replaceable>:</title>
        <step><para>
          Create a new file under <filename class="directory">&envarljhome;/cgi-bin/bml/scheme</filename>,
          labeled after the scheme name (<replaceable>foo</replaceable>). For example:
          <filename>&envarljhome;/cgi-bin/bml/scheme/<replaceable>foo</replaceable>.look</filename>.
          This file should contain all of the &bml; directives you have written for your unique layout.
          The first line in this file should be <programlisting>_parent=&gt;global.look</programlisting>
        </para></step>
        <step><para>
          If you don&apos;t have a local &bml; configuration file (<filename>_config-local.bml</filename>)
          in your <filename class="directory">&envarljhome;/htdocs</filename> directory, you should create one now.
          The contents of that file should look like:
          <example id="example-lj-local_bml_file">
            <title>Sample <filename>_config-local.bml</filename></title>
            <programlisting>DoGZIP 1
DefaultLanguage <replaceable>en_YS</replaceable>
DefaultScheme <replaceable>foo</replaceable></programlisting>
          </example>
        </para></step>
        <step><para>
          Manually restart the &apache; process.
        </para></step>
      </procedure>
    <para>
      After you have written your scheme, consider adding it to the array in <xref linkend="ljconfig.schemes" />, so that
      your users can use their preferred scheme. You can also add a thumbnail preview image of your front page
      into <filename class="directory">htdocs/img/schemethumb</filename>, and link to it from that array.
    </para>
  </section>
  
  <section id="lj.customize.layout.ref">
    <title>&bml; Template Reference</title>
    <para>For reference, here are the most commonly used &bml; templates in the &lj; repository:</para>
    <itemizedlist>
      <title>Pre-configured</title>
      <para>The following are &bml; templates set from configuration options
      in <filename>&envarljhome;/etc/ljconfig.pl</filename>.
      All templates here are defined as <quote>S</quote> (static).</para>
      <listitem><para><link linkend="ljconfig.admin_email">ADMIN_EMAIL</link></para></listitem>
      <listitem><para><link linkend="ljconfig.domain">DOMAIN</link></para></listitem>
      <listitem><para><link linkend="ljconfig.imgprefix">IMGPREFIX</link></para></listitem>
      <listitem><para><link linkend="ljconfig.sitename">SITENAME</link></para></listitem>
      <listitem><para><link linkend="ljconfig.siteroot">SITEROOT</link></para></listitem>
      <listitem><para><link linkend="ljconfig.sslimgprefix">SSLIMGPREFIX</link></para></listitem>
      <listitem><para><link linkend="ljconfig.ssljsprefix">SSLJSPREFIX</link></para></listitem>
      <listitem><para><link linkend="ljconfig.sslroot">SSLROOT</link></para></listitem>
      <listitem><para><link linkend="ljconfig.sslstatprefix">SSLSTATPREFIX</link></para></listitem>
      <listitem><para><link linkend="ljconfig.sslwstatprefix">SSLWSTATPREFIX</link></para></listitem>
      <listitem><para><link linkend="ljconfig.statprefix">STATPREFIX</link></para></listitem>
      <listitem><para><link linkend="ljconfig.support_email">SUPPORT_EMAIL</link></para></listitem>
    </itemizedlist>
    <para>The following &bml; templates are defined
    in <filename>&envarljhome;/cgi-bin/bml/scheme/global.look</filename>
      and are available in every scheme.</para>
    <variablelist>
      <title>Global</title>
      <varlistentry>
        <term>SECURITYPRIVATE</term>
        <listitem><simpara>&html; image sourcing from <filename>/img/icon_private.gif</filename></simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>SECURITYPROTECTED</term>
        <listitem><simpara>&html; image sourcing from <filename>/img/icon_protected.gif</filename></simpara></listitem>
      </varlistentry>
      <varlistentry>      
         <term>HELP</term>
        <listitem><simpara>Given a &url;, this provides a small link with the caption <quote>help</quote></simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>INERR</term>
        <listitem><simpara>Displays an error message in an easily identifiable manner (bold red text)</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>NEEDLOGIN</term>
        <listitem><simpara>A small blurb that&apos;s included on pages where the user is not logged in and is required to be</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>BADINPUT</term>
        <listitem><simpara>An error message that displays when there is an encoding problem with the user&apos;s browser</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>REQUIREPOST</term>
        <listitem><simpara>An error message explaining that certain user actions require POSTing information through an &html; form, rather than manually GETting the page</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>LOAD_PAGE_INFO</term>
        <listitem><simpara>Initializes and populates a perl array that is used to create a sidebar of links along a page layout</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>H1</term>
        <listitem><simpara>Top level header on a page</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>H2</term>
        <listitem><simpara>Sub level header on a page</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>P</term>
        <listitem><simpara>Generic &html; paragraph wrapper</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>STANDOUT</term>
        <listitem><simpara>Given a block of text, this template tries grab the user&apos;s attention by using different text and background colors</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>BADCONTENT</term>
        <listitem><simpara>An error message that displays when a problem (that the user can fix) has occurred during a request</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>DE</term>
        <listitem><simpara>A template that de-emphasizes text</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>EMCOLOR</term><term>EMCOLORLITE</term><term>HOTCOLOR</term>
        <listitem><simpara>Various emphasis colors</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>SCREENEDBARCOLOR</term>
        <listitem><simpara>A color that is used to highlight screened comments in comment threads</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>CHOICE</term>
        <listitem><simpara>Given 3 arguments (a &url;, a title, and an explanatory blurb), this template fashions an item to be used in a CHOICES list</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>CHOICES</term>
        <listitem><simpara>Given 2 arguments, this template tries to construct a side by side list of options and appropriate links</simpara></listitem>
      </varlistentry>
      <varlistentry>
        <term>PAGE</term>
        <listitem><para>This template is the &bml; template that governs the look of the entire scheme, and takes 4 arguments:
            <variablelist>
              <varlistentry>
                <term>title</term>
                <listitem><simpara>The page title</simpara></listitem>
              </varlistentry>
              <varlistentry>
                <term>head</term>
                <listitem><simpara>Page-specific elements that belong in a &html; head</simpara></listitem>
              </varlistentry>
              <varlistentry>
                <term>bodyopts</term>
                <listitem><simpara>Additional attributes for the &html; body element</simpara></listitem>
              </varlistentry>
              <varlistentry>
                <term>body</term>
                <listitem><simpara>The main content of the page</simpara></listitem>
              </varlistentry>
            </variablelist>
          </para></listitem>
      </varlistentry>
    </variablelist>
  </section>
</chapter>

<!--
Local Variables:
mode:sgml
sgml-parent-document: ("index.xml" "part" "chapter")
End:
-->

