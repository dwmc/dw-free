<chapter id="lj.install.mysql_setup">
  <title>&mysql;</title>
  <abstract><para>
    There are a few simple reasons why we chose &mysql; when picking a database backend for &lj;:
    It's <ulink url="http://www.mysql.com/information/benchmarks-old.html">fast</ulink>,
    <ulink url="http://www.mysql.com/doc/en/Using_the_MySQL_software_for_free_under_GPL.html">free</ulink>,
    <ulink url="http://www.mysql.com/doc/en/Stability.html">stable</ulink>,
    <ulink url="http://www.mysql.com/doc/en/Privilege_system.html">secure</ulink>, and well supported
    by a large community of users. In this chapter we will deal with installing and setting up &mysql; on
    your server, then we will show you how to populate your installation with the required base data.
  </para></abstract>
  <section id="lj.install.mysql_setup.install">
    <title>Install &mysql;</title>
    <para>
      &lj; requires a &mysql; install of at least version 4.1.<replaceable>x</replaceable>,
      but highly recommends installing the latest stable release 
      available, especially if you are going to need clustering and
      replication abilities.
    </para>
    <para>
      &mysql; offers binaries for many operating systems, including 
      <trademark class="registered">Windows</trademark> and 
      several different <quote>flavors</quote> of &unix;.
      Installations on any of these systems should be fairly easy, as
      most offer a simple installation program that guides you through
      setup.
    </para>
    <tip><title>&debian;</title>
      <simpara>The &mysql; server package for &debian; is <package>mysql-server</package>.</simpara>
    </tip>
  </section>
  
 <section id="lj.install.mysql_setup.secure_install">

    <title>Secure your &mysql; installation</title>

<para>By default, a &mysql; installation is insecure. &mysql; comes with
a <quote><systemitem class="username">root</systemitem></quote> user with a
blank password, and an
<quote><systemitem class="username">anonymous</systemitem></quote>
user, for testing purposes. To protect your data we strongly recommend
you set a password for the <quote>root</quote> user
and remove anonymous-user accounts.</para>

<para>&mysql; ships with a script that guides you through these steps. Run
the script as follows:
<screen><prompt>$</prompt> mysql_secure_installation</screen></para>

<para>The script will ask you which changes it should make.</para>
<para>You can find more information about &mysql; security in the &mysql;
<ulink url="http://dev.mysql.com/doc/refman/5.0/en/security.html">documentation</ulink>.</para>
</section>
  
  <section id="lj.install.mysql_setup.create_db">
    <title>Create the &lj; Database</title>
    <para>
      Login to &mysql; as the  <systemitem class="username">root</systemitem> &mysql; user and create the database that
      will hold the &lj; data:
    </para>

<screen><prompt>$</prompt> <userinput>mysql -uroot -p</userinput>
<prompt>mysql></prompt> <userinput>CREATE DATABASE livejournal;</userinput>
<prompt>mysql></prompt> <userinput>GRANT ALL PRIVILEGES ON livejournal.* TO </userinput>
<prompt>     ></prompt> <userinput>lj@'localhost' IDENTIFIED BY 'ljpass';</userinput>
<prompt>     ></prompt> <userinput>\q</userinput></screen>

    <para>
      If you know what you are doing, you can set this up however you
      like.  You tell &lj; how to connect to its database server(s) 
      in your <filename>ljconfig.pl</filename>, as
      detailed in: <xref linkend="lj.install.ljconfig.dbinfo" />.
    </para>
  </section>
  
  &lj.install.ljconfig.dbinfo;

  <section id="lj.install.mysql_setup.pop_db">
    <title>Populate the Database</title>
    <para>
      In order to use your site, you&apos;re going to need to populate your &mysql;
      database with the required information to get the service started.
    </para>

<screen><prompt>$</prompt> <userinput><command>cd</command> <link linkend='lj.install.ljhome'>&envarljhome;</link></userinput>
<prompt>$</prompt> <userinput><command>bin/upgrading/update-db.pl <option>--innodb</option> <option>--runsql</option> <option>--populate</option></command> <co id="COinnodbTables" linkends="TablesinnodbCO" /></userinput>
<prompt>$</prompt> <userinput><command>bin/upgrading/texttool.pl <option>load en</option></command> <co id="COtexttoolLocal" linkends="texttoolLocalCO" /></userinput></screen>

   <calloutlist>
      <callout arearefs="COinnodbTables" id="TablesinnodbCO">
            <para>All tables are created
            as <ulink url="http://dev.mysql.com/doc/mysql/en/InnoDB_overview.html"><literal>InnoDB</literal></ulink> by default.</para>
      </callout>
      <callout arearefs="COtexttoolLocal" id="texttoolLocalCO">
            <para>Adjust this line to load any additional <link linkend="lj.customize.text">site-specific text</link>, too:
            <synopsis>
            <command>bin/upgrading/texttool.pl <option>load en <replaceable>en_YS</replaceable></option></command></synopsis></para>
      </callout>
    </calloutlist>

    <para>
      That will bring your database schema up-to-date and populate it with any
      look-up data it needs.
    </para>

<para>
If you are using multiple &mysql; servers, as detailed 
in <xref linkend="lj.install.supplemental_sw.multiple_db" />, populate these, too:

<screen><prompt>$</prompt> <userinput><command>bin/upgrading/update-db.pl</command> <option>--cluster=all -r -p</option></userinput></screen></para>

  </section>
</chapter>
<!-- 
Local Variables:
mode:sgml
sgml-parent-document: ("index.xml" "part" "chapter")
End:
 -->

