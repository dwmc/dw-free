#!/usr/bin/perl
use strict;
use lib "$ENV{LJHOME}/cgi-bin";

LJ::Worker::SynSuck->run;

package LJ::Worker::SynSuck;
use base 'LJ::Worker::Manual';
use LJ::SynSuck;  # the real work

# return 1 if we did work, false if not.
sub work {
    my $class = shift;

    my $dbh = LJ::get_db_writer() or  return;

    my @todo;
    my $sth = $dbh->prepare("SELECT u.user, s.userid, s.synurl, s.lastmod, " .
                            "       s.etag, s.numreaders, s.checknext " .
                            "FROM user u, syndicated s " .
                            "WHERE u.userid=s.userid " .
                            "AND s.checknext < NOW() " .
                            "LIMIT 500");
    $sth->execute;
    while (my $urow = $sth->fetchrow_hashref) {
        push @todo, $urow;
    }

    my $done = 0;
    foreach my $urow (@todo) {
        my $lockname = "synsuck-user-" . $urow->{user};
        my $lock = LJ::locker()->trylock($lockname);
        next unless $lock;
        $class->cond_debug("got lock $lockname");
        $done++;
        LJ::SynSuck::update_feed($urow, $class->verbose);
    }
    return $done;
}

#3 each:
#206, 207, 208, 235, 236, 247

