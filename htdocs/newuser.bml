<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?page
title=><?_code BML::ml(".title", {'sitename' => $LJ::SITENAMESHORT}) _code?>
body<=
<?_code
{
    use strict;

    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $authas = $GET{'authas'} || $remote->{'user'};
    my $u = LJ::get_authas_user($authas);
    return LJ::bad_input($ML{'error.invalidauth'}) unless $u;

    # The copy is slighly different for communities
    if ($GET{authas}) {
        BML::set_language_scope('/community/create.bml');
    } else {
        BML::set_language_scope('/create.bml');
    }

    my $ret;
    $ret = "<?h1 $ML{'.success.head'} h1?><?p ".BML::ml(".success.text1", {'email' => $u->email_raw, 'username' => $u->{user}}) ." p?>";

    my $uri = $u->journal_base . "/";
    $ret .= "<?p $ML{'.success.text2'} p?>\n";
    $ret .= "<?standout <font size='+1' face='arial'><b><a href='$uri'>$uri</a></b></font> standout?>\n";
    $ret .= "<?p $ML{'.success.text3'} p?>\n";

    $ret .= "<form method='get' action='$LJ::SITEROOT/manage/profile/'>";
    $ret .= LJ::html_hidden('authas', $authas) if $GET{'authas'};
    $ret .= "<p align='center'>" . LJ::html_submit(undef, "$ML{'.success.btn.enterinfo'} &rarr;") . "</p>";
    $ret .= "</form>\n";

    return $ret;
}
_code?>
<=body
page?>
