<?page
body<=
<?_code
{
    use strict;
    use vars qw (%POST %GET $body $title $headextra);
    use Carp qw(croak);

    $title = 'Manage Message Settings';

    return "Not ready" unless LJ::is_enabled('esn');

    use Class::Autouse qw(LJ::NotificationMethod LJ::Event);

    BML::decl_params(
                     lj_form_auth => qr/./,
                     journal      => 'word',
                     ditemid     => 'digits',
                     itemid      => 'digits',
                     );

    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $ditemid = $POST{'itemid'} || $GET{'itemid'} || $POST{'ditemid'} || $GET{'ditemid'};
    my $journal = $POST{'journal'} || $GET{'journal'};
    my $ntypeid = int($POST{'ntypeid'});

    my $journal = LJ::load_user($journal) or return LJ::error_list("Invalid journal '$journal'");

    return LJ::error_list("No entry specified") unless $ditemid;

    my $entry = LJ::Entry->new($journal, ditemid => $ditemid);

    return LJ::error_list("Invalid entry") unless $entry && $entry->valid;
    return LJ::error_list("You are not authorized to subscribe to this entry.") unless $entry->visible_to($remote);

    my $categories = [{
        'Track' => [
                    LJ::Subscription::Pending->new(
                                                   $remote,
                                                   event   => "JournalNewComment",
                                                   arg1    => $ditemid,
                                                   journal => $journal,
                                                   default_selected => 1,
                                                   flags   => LJ::Subscription::TRACKING,
                                                   ),
                    ],
                }];

    # only administrators of a community should be given the option to track all comments on another journal
    push @{@$categories[0]->{Track}},
        LJ::Subscription::Pending->new(
                                       $remote,
                                       event   => "JournalNewComment",
                                       journal => $journal,
                                       flags   => LJ::Subscription::TRACKING,
                                       ) if $journal->is_community && LJ::can_manage_other( $remote, $journal );

    push @{@$categories[0]->{Track}},
        LJ::Subscription::Pending->new(
                                       $remote,
                                       event   => "JournalNewEntry",
                                       arg1    => '?',
                                       journal => $journal,
                                       flags   => LJ::Subscription::TRACKING,
                                       ),
        LJ::Subscription::Pending->new(
                                       $remote,
                                       event   => "JournalNewEntry",
                                       journal => $journal,
                                       flags   => LJ::Subscription::TRACKING,
                                       );

    $body .= LJ::subscribe_interface($remote,
                                     journal      => $journal,
                                     categories   => $categories,
                                     ret_url      => $entry->url,
                                     default_selected_notifications => ['LJ::NotificationMethod::Email'],
                                     post_to_settings_page => 1,
                                     );

    return $body;
}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<style type='text/css'>
</style>
<?_code return $headextra; _code?>
<=head
<=body
page?>

