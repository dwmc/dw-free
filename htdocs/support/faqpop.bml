<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?page
title=><?_ml .faqpop.title _ml?>
body<=

<?_code
 LJ::set_active_crumb('popfaqs');
 $ret .= "<?h1 $ML{'.head.title'} h1?>";
 $ret .= "<?p $ML{'.faqpop.title.text'} p?>";
 
 my $remote = LJ::get_remote();
 my $user;
 my $user_url;

 # Get remote username and journal URL, or example user's username and journal URL
 if ($remote) {
     $user = $remote->user;
     $user_url = $remote->journal_base;
 } else {
     my $u = LJ::load_user($LJ::EXAMPLE_USER_ACCOUNT);
     $user = $u ? $u->user : "<b>[Unknown or undefined example username]</b>";
     $user_url = $u ? $u->journal_base : "<b>[Unknown or undefined example username]</b>";
 }

 my $dbr = LJ::get_db_reader();
 my $sth = $dbr->prepare("SELECT statkey, statval FROM stats WHERE statcat='pop_faq' ORDER BY statval DESC LIMIT 50");
 $sth->execute;

 $ret .= "<ul>";
 while (my $s = $sth->fetchrow_hashref) {
     my $f = LJ::Faq->load($s->{statkey}, lang => BML::get_language());
     $f->render_in_place({user => $user, url => $user_url});
     my $q = $f->question_html;
     $q =~ s/^\s+//; $q =~ s/\s+$//;
     $q =~ s!\n!<br />!g;
     $ret .= "<li><a href='faqbrowse?faqid=" . $f->faqid
         . "'>$q</a> <i>($s->{statval})</i></li>\n";
 }
 $ret .= "</ul>\n";
 $ret .= "<?hr?>";
 $ret .= BML::ml('.faqpop.back.link', {backlink=>'href="./"'});

 return $ret;

_code?>

<=body
page?>
