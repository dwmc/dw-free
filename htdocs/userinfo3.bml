<?_code
 use strict;
 use vars qw($title $windowtitle $body $head %GET);

 BML::set_language_scope('/userinfo.bml');

 $title = $ML{'.title1'};
 $body = "";
 $head = "";
 $windowtitle = "";

 # Deal with bots
 my $sep  = "**";
 my $pre  = "<!-- \n" . ($sep x 40 . "\n") x 2 . "$sep\n" x 10 . $sep;
 my $post = "\n" . "$sep\n" x 10 . ($sep x 40 . "\n") x 2 . " -->";
 $body .= LJ::run_hook("bot_director", $pre, $post);

 if ($LJ::SERVER_DOWN) {
     $title = $ML{'Sorry'};
     $body = LJ::server_down_html();
     return;
 }

 my $MAX_FRIENDS_SHOW = 500;
 my $MAX_FRIENDOF_SHOW = 150;

 # if new-style URLs, get the GET{user} arg from the request notes,
 # which was set by LiveJournal.pm
 unless ($GET{'user'}) {
     my $r = BML::get_request();
     $GET{'user'} = $r->notes("_journal");
 }

 my $remote = LJ::get_remote();
 if ($GET{'user'} eq "" && $GET{'userid'} eq "" && !$remote) {
     $body = "<?needlogin?>";
     return;
 }

 my $sth; # SQL select for time update, create and seconds old
 my %countries = ();
 my %states = ();
 LJ::load_codes({ "country" => \%countries, "state" => \%states });

 my $error = sub {
     my $e = shift;
     $body = "<?h1 $ML{'Error'} h1?><?p $e p?>";
     return;
 };

 my $user = LJ::canonical_username($GET{'user'});
 if ($GET{'user'} && ! $user) {
     $body = $ML{'.error.malfname'};
     return;
 }
 # TODO:Is this check needed?
 if ($user eq "" && $remote) {
     $user = $remote->{'user'};
 }

 my $dbr = LJ::get_db_reader();
 return $error->($ML{'error.nodb'}) unless $dbr;

 my $userid = $GET{'userid'};
 my $u;
 $userid += 0;

 {
     if ($userid) {
         $u = LJ::load_userid($userid);
     } else {
         $u = LJ::load_user($user);
     }

     return $error->($ML{'.label.reqfinduser'})
         if $userid && ! LJ::check_priv($remote, "finduser") && ! ($GET{t} eq "I" && $u && $u->{journaltype} eq "I");

     # fix accidentally broken ext_nnnn URLs for identity users
     if ($u && $u->{journaltype} eq "I" && ! $userid) {
         return BML::redirect("$LJ::SITEROOT/userinfo.bml?userid=$u->{'userid'}&t=I");
     }

     $user = $u->{'user'} if $u;
     $userid = $u->{'userid'}+0 if $u;

     if ($u) {
         LJ::text_out(\$u->{'name'});
         $sth = $dbr->prepare("SELECT timeupdate, timecreate, ".
                              "UNIX_TIMESTAMP()-UNIX_TIMESTAMP(timeupdate) ".
                              "AS 'secondsold' FROM userusage ".
                              "WHERE userid=$userid");
         $sth->execute;
         ($u->{'timeupdate'},
          $u->{'timecreate'},
          $u->{'secondsold'}) = $sth->fetchrow_array;
     }
 }

 unless ($u) {
     $title = $ML{'Error'};
     $body = "<?h1 $ML{'.nonexist.name'} h1?><?p " . BML::ml('.nonexist.body',{'user'=>$user}) . " p?>";
     return;
 }

 # account purged?
 if ($u->{'statusvis'} eq "X") {
     $title = $ML{'error.purged.title'};
     $body = "<?h1 $ML{'error.purged.name'} h1?><?p $ML{'error.purged.text'} p?>";
     BML::set_status(410); # 410 Gone
     return;
 }

 my $domain = BML::get_client_header("Host");
 if ($LJ::ONLY_USER_VHOSTS && $u->{journaltype} ne "I") {
     my $url = $u->journal_base . "/profile";
     my $good_domain = $url;
     $good_domain =~ s!^http://!!;
     $good_domain =~ s!/.*!!;
     if ($domain ne $good_domain) {
         return BML::redirect($url);
     }
 }

 my $dbcr = LJ::get_cluster_reader($u);
 return $error->($ML{'error.nodb'}) unless $dbcr;

 # option
 my %hide_fo;  # userid -> 1
 if (my $list = LJ::load_rel_user($u, 'B')) {
     $hide_fo{$_} = 1 foreach @$list;
 }

 my $remote_isowner = $remote && $remote->{'user'} eq $u->{'user'};
 my $remote_isfriend = LJ::is_friend($u, $remote);
 my $user_isfriend = LJ::is_friend($remote, $u);
 my $com = $u->{'journaltype'} eq "C" ? 1 : 0;
 my $extid = $u->{'journaltype'} eq "I" ? $u->identity : undef;

 my $synd;
 if ($u->{'journaltype'} eq "Y") {
     $synd = $dbr->selectrow_hashref("SELECT * FROM syndicated WHERE userid=$u->{'userid'}");
 }

 my $has_journal = ! ($extid or $synd);

 ### load user props.  some don't apply to communities
 {
     my @props = qw(opt_whatemailshow country state city zip renamedto
                    journaltitle journalsubtitle public_key
                    url urlname opt_hidefriendofs dont_load_members no_mail_alias
                    opt_showmutualfriends fb_num_pubpics opt_showschools);
     unless ($com || $synd) { push @props, qw(aolim icq yahoo msn gender jabber google_talk skype gizmo); }
     if ($synd) { push @props, qw(rssparseerror); }
     if ($com) { push @props, qw(moderated); }
     if ($u->{'statusvis'} eq 'V') { push @props, qw( opt_blockrobots adult_content admin_content_flag ); }
     $u->preload_props(@props);
 }

 if ($u->{'statusvis'} ne 'V' || $u->should_block_robots) {
     $head .= LJ::robot_meta_tags();
 }

 # TODO: Redirect directly to the profile URL
 if ($u->{'journaltype'} eq "R" && $u->{'renamedto'}) {
     return BML::redirect("$LJ::SITEROOT/userinfo.bml?user=$u->{'renamedto'}");
 }

  my %friends = ('load'=>1, 'loaded'=>0, 'display'=>1, 'count'=>0);
  my %friendsof = ('load'=>1, 'loaded'=>0, 'display'=>1, 'count'=>0);

 if ($com) {
     $title = $ML{'.title.communityinfo'};
 } elsif ($synd) {
     $title = $ML{'.title.syndicated'};
     $u->{'opt_whatemailshow'} = "N";  # don't show email
     $friends{'load'} = $friends{'display'} = 0;
 }

 if ($extid) {
     $windowtitle = "External identity profile";
 } else {
     $windowtitle = "$u->{'user'} - $title";
 }

 $friends{'load'} = $friendsof{'load'} = 0 if $com && $u->{'dont_load_members'};

 # do they have the viewall priv?
 # there are no entries on this page, so we just check if they have any viewall, so viewsome
 # applies here too.  we can't see info they've hidden anyway, but we can see the page.
 my $viewall = 0;
 if ($GET{'viewall'} && LJ::check_priv($remote, "canview")) {
   $viewall = LJ::check_priv($remote, 'canview', '*');
   LJ::statushistory_add($u->{'userid'}, $remote->{'userid'},
                         "viewall", "userinfo: $u->{'user'}, statusvis: $u->{'statusvis'}");
 } else {

     if ($u->{'statusvis'} eq "S") {
         $title = $ML{'error.suspended.title'};
         $body = "<?h1 $ML{'error.suspended.name'} h1?><?p " .
                 BML::ml('error.suspended.text', { 'user' => LJ::ljuser($user),
                                                   'sitename' => $LJ::SITENAME }) . " p?>";
         BML::set_status(403); # 403 Forbidden
         return;
     }
     if ($u->{'statusvis'} eq "D") {
         $title = $ML{'error.deleted.title'};
         $body = "<?h1 $ML{'error.deleted.name'} h1?><?p " .
           BML::ml('error.deleted.text',{'user'=>$user}) . " p?>";
         BML::set_status(404); # 404 Not Found
         return;
     }
 }

 $user = $u->{'user'};
 $userid = $u->{'userid'};

 $u->{'bio'} = LJ::get_bio($u);
 LJ::text_out(\$u->{'bio'});

 # arrayref of interests rows:  [ intid, intname, intcount ]
 my $intu = LJ::get_interests($u);

 my %remote_interest;
 unless ($remote_isowner) {
     if (my $rint = LJ::get_interests($remote, { justids => 1 })) {
         $remote_interest{$_} = 1 foreach @$rint;
     }
 }

 if ($u->{'opt_hidefriendofs'} && ! $remote_isowner) {
     # at this point, load should be on if viewall is on or if the user
     # wants to show their mutual friends
     $friendsof{'load'} = $u->{'opt_showmutualfriends'} || $viewall;
     $friendsof{'display'} = $viewall;
 }

 # Add metadata links to <head>
 my $digest = Digest::SHA1::sha1_hex('mailto:' . $u->email_raw);
 my $jbase = $u->journal_base;
 $head .= "<link rel='alternate' type='application/rss+xml' title='RSS' href='$jbase/data/rss' />\n";
 $head .= "<link rel='alternate' type='application/atom+xml' title='Atom' href='$jbase/data/atom' />\n";
 $head .= "<link rel='alternate' type='application/rdf+xml' title='FOAF' href='$jbase/$user/data/foaf' />\n";
 $head .= "<meta name=\"foaf:maker\" content=\"foaf:mbox_sha1sum '$digest'\" />\n";

 LJ::need_res('stc/userprofile.css');

 # Created a sorted array(@friends) and a hash(%fr) of friends
 my @friends;
 my %fr;
 # TAG:FR:userinfo:loadfriends
 if ($friends{'load'}) {
     my $fr_res = LJ::get_friends($u);
     my @ids = keys %$fr_res;
     $friends{'count'} = @ids;
     if (@ids > $MAX_FRIENDS_SHOW) {
         @ids = splice(@ids, 0, $MAX_FRIENDS_SHOW);
     }
     LJ::load_userids_multiple([ map { $_ => \$fr{$_} } @ids ]);
     push @friends, sort { $a->display_name cmp $b->display_name } values %fr;
     $friends{'loaded'} = 1;
 }

 my (@friend_of, @member_of, @mutual);

 # TAG:FR:userinfo:loadfriendofs
 if ($friendsof{'load'}) {
     # figure at most 50 people are not statusvis='V' *shrug* (this is lame pending the friend changes)
     my @ids = grep { ! $hide_fo{$_} } LJ::get_friendofs($u);
     $friendsof{'load_clipped'} = @ids > $LJ::MAX_FRIENDOF_LOAD;

     my %fro;
     LJ::load_userids_multiple([ map { $_ => \$fro{$_} } @ids ]);

     foreach my $ulocal (sort { $a->display_name cmp $b->display_name } values %fro) {
         next unless $ulocal->{'statusvis'} eq 'V';
         if ($ulocal->{'journaltype'} eq 'P' || $ulocal->{'journaltype'} eq "I") {
             if (!$com && $u->{'opt_showmutualfriends'} && $fr{$ulocal->{userid}}) {
                 push @mutual, $ulocal;
             } else {
                 push @friend_of, $ulocal;
             }
         } else {
             push @member_of, $ulocal;  # 'S' or 'C' (shared or community)
         }
     }

     $friendsof{'count'} = scalar @friend_of;
     $friendsof{'count_m'} = scalar @member_of;
     $friendsof{'count_b'} = scalar @mutual;
     $friendsof{'loaded'} = 1;
 }

 $u->{'name'} = LJ::ehtml($u->{'name'});

 # TAG:FR:userinfo:remotefriends
 # who does the remote user list as a friend?
 my %remote_friendid;
 if ($remote && $friends{'loaded'}) {
     if ($remote->{'userid'} == $u->{'userid'}) {
         foreach (@friends) { $remote_friendid{$_->{'userid'}} = 1; }
     } else {
         my $frs = LJ::get_friends($remote) || {};
         $remote_friendid{$_} = 1 while $_ = each %$frs;
     }
 }

 # TODO: Remove this section? Should no longer be needed.
 # BML helpers.  we do BML by hand in this page, so we don't force BML
 # to evaluate this huge page looking for non-existent BML.  this
 # makes it quicker, and prevents us from having to clean out BML in
 # the HTML cleaner too.
 my $h1 = sub {
     return BML::fill_template("h1", { DATA => $_[0] });
 };
 my $p = sub {
     return BML::fill_template("p", { DATA => $_[0] });
 };

 # count journal entries
 my $journalentry_count = sub {
     my $memkey = [$userid, "log2ct:$userid"];
     my $count = LJ::MemCache::get($memkey);
     unless ($count) {
         my $expire = time() + 3600*24*2; # 2 days
         $count = $dbcr->selectrow_array("SELECT COUNT(*) FROM log2 WHERE journalid=?",
                                         undef, $userid);
         LJ::MemCache::set($memkey, $count, $expire);
     }

     return (&comma($count));
 };

 sub comma {
     my $num = shift;
     if ($num > 0) {
         $num =~ s/(?<=\d)(?=(\d\d\d)+(?!\d))/,/g;
     }
     return $num;
 }

 ##
 ## journal comments
 my $num_com_post;
 my $num_com_got;
 {
     unless ($LJ::DISABLED{'show-talkleft'}) {
         my $memkey = [$userid, "talkleftct:$userid"];
         my $count = LJ::MemCache::get($memkey);
         unless ($count) {
             my $expire = time() + 3600*24*2; # 2 days
             $count = $dbcr->selectrow_array("SELECT COUNT(*) FROM talkleft " .
                                             "WHERE userid=?", undef, $userid);
             LJ::MemCache::set($memkey, $count, $expire) if defined $count;
         }
         $num_com_post = comma($count);
     }

     my $memkey = [$userid, "talk2ct:$userid"];
     my $count = LJ::MemCache::get($memkey);
     unless ($count) {
         my $expire = time() + 3600*24*2; # 2 days;
         $count = $dbcr->selectrow_array("SELECT COUNT(*) FROM talk2 ".
                                         "WHERE journalid=?", undef, $userid);
         LJ::MemCache::set($memkey, $count, $expire) if defined $count;
     }

     $num_com_got = comma($count);
 }

 # Schools Directory
 #
 # Outer if logic
 #  - Don't show if journal is syndicated or schools are disabled
 #  - Show if user set to show school info to everyone (or if userprop hasn't been set yet)
 #  - Show if user set to show to friends and remote is a friend
 #  - Show if remote is using viewall
 my $schoollist;
 if ($u->{'journaltype'} ne 'Y' &&
     !$LJ::DISABLED{'schools'}  &&
     (($u->{'opt_showschools'} eq '' || $u->{'opt_showschools'} eq 'Y') ||
      ($u->{'opt_showschools'} eq 'F' && $remote_isfriend) || $viewall)) {

     my $schools = LJ::Schools::get_attended($u);

     # Show if journal is not a community or
     # if it is a community and there are schools defined
     if ($u->{'journaltype'} ne 'C' || ($schools && %$schools)) {

         if ($schools && %$schools) {
             my @links;
             foreach my $sid (sort { $schools->{$a}->{year_start} <=> $schools->{$b}->{year_start} } keys %$schools) {
                 my $schoolname = "<a href='$LJ::SITEROOT/schools/" .
                     "?ctc=" . LJ::eurl($schools->{$sid}->{country}) .
                     "&sc=" . LJ::eurl($schools->{$sid}->{state}) .
                     "&cc=" . LJ::eurl($schools->{$sid}->{city}) .
                     "&sid=" . $sid .
                     "'>" . LJ::ehtml($schools->{$sid}->{name}) . "</a>";
                 my $schoolinfo .= $schools->{$sid}->{city};
                 $schoolinfo .= $schools->{$sid}->{state} ? ", $schools->{$sid}->{state}" : "";
                 if ($schools->{$sid}->{country} ne 'US') {
                     my %countries;
                     LJ::load_codes({ country => \%countries });
                     $schoolinfo .= ", $countries{$schools->{$sid}->{country}}";
                 }

                 my $schooldates;
                 if (defined $schools->{$sid}->{year_start}) {
                     $schooldates .= " (" . $schools->{$sid}->{year_start};

                     if ($schools->{$sid}->{year_start} != $schools->{$sid}->{year_end}) {
                         $schooldates .= " - " . ($schools->{$sid}->{year_end} || "present");
                     }

                     $schooldates .= ")";
                 }

                 my $link .= $schoolname . " - " . $schoolinfo . $schooldates . "<br />\n";

                 push @links, $link;
             }
             $schoollist .= join('', @links);
         } else {
             $schoollist .= "<i>$ML{'.label.noschools'}</i>";
         }

         if ($remote_isowner) {
             $schoollist .= ' <small>';
             $schoollist .= BML::ml('Actionlink', { 'link' => "<a href='$LJ::SITEROOT/schools/manage.bml'>$ML{'.label.manageschools'}</a>" });
             $schoollist .= '</small>';
         }

     }
 }
 # /Schools

 # Mangle email address
 my $mangleaddress = sub {
     my $email = shift;
     my $mret;
     if ( $email =~ m/(.*)@(.*)/ ) {
         $mret = "<table cellpadding='0' cellspacing='0'><tr><td>$1</td><td align='center'><i>&#64;</i></td><td>$2</td></tr></table>";
     } else {
         $mret = $email;
     }
     return $mret;
 };
 # /Mangle

 # Contact Info
 my $contactinfo = sub {
     my $body;
     # Divide email address across 3 table cells
     my @emails = $u->emails_visible($remote);
     if (@emails) {
         $body .= "<tr valign='top'><td align='right'>$ML{'.label.email'} </td><td class='data'>";
         foreach my $email (@emails) {
             $body .= ($u->{'opt_mangleemail'} eq "Y" || $email =~ /\@livejournal\.com$/)
                       ? $mangleaddress->($email)
                       : "<a href='mailto:$email'>$email</a><br />";
         }
         $body .= "</td></tr>";
     }

     foreach my $k (qw(aolim icq yahoo msn jabber google_talk skype gizmo)) {
         $u->{$k} = LJ::ehtml($u->{$k});
     }

     unless ($LJ::DISABLED{ljtalk}) {
         my $ljtalk = $mangleaddress->($u->{user}.'@'.$LJ::USER_DOMAIN);
         $body .= "<tr nowrap='nowrap'><td valign='top' align='right' nowrap='nowrap' style='white-space: nowrap;'><b>".BML::ml('.label.gizmo2', { 'aopts' => "href='$LJ::SITEROOT/chat/'" })."</b></td><td><table border='0' cellspacing='0' cellpadding='0'><tr><td class='data'>$ljtalk</td><td><a href='$LJ::SITEROOT/chat/'><img style='padding-left: 5px;' src='$LJ::IMGPREFIX/help.gif' border='0' /></a></td></tr></table></td></tr>\n";
     }

      if ($u->{'aolim'}) {
          my $qim = $u->{'aolim'};
          $qim =~ s/ //g;
          $body .= "<tr><td valign='top' align='right'><span style='white-space: nowrap;'>$ML{'.label.aolim'} </span></td>";
          $body .= "<td class='data'><img alt='AIM status' src='http://big.oscar.aol.com/$qim?on_url=http://www.aol.com/aim/gr/online.gif&amp;off_url=http://www.aol.com/aim/gr/offline.gif' height='17' width='14' /> $u->{'aolim'} \n";
          $body .= "<span class='nowrap'>(<a href='aim:addbuddy?screenname=$qim'>$ML{'.label.addbuddy'}</a>,";
          $body .= "<a href='aim:goim?screenname=$qim&amp;message=Hello+there!+How+are+you?'>$ML{'.label.sendmessage'}</a>)</span></td></tr>\n";
      }
      if ($u->{'icq'}) {
          $body .= "<tr><td valign='top' align='right'>$ML{'.label.icquin'}</td>";
          $body .= "<td class='data'><img alt='ICQ status' src='http://web.icq.com/whitepages/online?icq=$u->{'icq'}&amp;img=5' height='18' width='18' /> ";
          $body .= "$u->{'icq'} (<a href='http://wwp.icq.com/$u->{'icq'}'>";
          $body .= "$ML{'.label.userprofile'}</a>)";
          $body .= "</td></tr>\n";
      }
      if ($u->{'yahoo'}) {
          $body .= "<tr><td valign='top' align='right'><span style='white-space: nowrap;'>$ML{'.label.yahooid'}</span></td>";
          $body .= "<td class='data'><img alt='Yahoo status' src='http://opi.yahoo.com/online?u=$u->{'yahoo'}&amp;m=g&amp;t=0' width='12' height='12' /> <a href='http://profiles.yahoo.com/$u->{'yahoo'}'>$u->{'yahoo'}</a> \n";
          $body .= "<span class='nowrap'>(<a href='http://edit.yahoo.com/config/set_buddygrp?.src=&amp;.cmd=a&amp;.bg=Friends&amp;.bdl=$u->{'yahoo'}'>$ML{'.label.adduser'}</a>, <a href='http://edit.yahoo.com/config/send_webmesg?.target=$u->{'yahoo'}'>$ML{'.label.sendmessage'}</a>)</span> </td></tr>\n";
      }
      if ($u->{'msn'}) {
          my $msnname = ($u->{'opt_mangleemail'} eq "Y") ? $mangleaddress->($u->{'msn'}) : $u->{'msn'};
          $body .= "<tr><td valign='top' align='right'>$ML{'.label.msnusername'}</td><td class='data'>$msnname</td></tr>\n";
      }
      if ($u->{'jabber'}) {
          my $jabber = $mangleaddress->($u->{'jabber'});
          $body .= "<tr><td valign='top' align='right'>$ML{'.label.jabber'}</td><td class='data'>$jabber</td></tr>\n";
      }
      if ($u->{'google_talk'}) {
          my $google = $mangleaddress->($u->{'google_talk'});
          $body .= "<tr><td valign='top' align='right'>$ML{'.label.googletalk'}</td><td class='data'>$google</td></tr>\n";
      }
      if ($u->{'skype'}) {
          my $skype = $mangleaddress->($u->{'skype'});
          $body .= "<tr><td valign='top' align='right'>$ML{'.label.skype'}</td><td class='data'>$skype</td></tr>\n";
      }
      if (my $gizmo = $u->gizmo_account) {
          $gizmo = $mangleaddress->( $gizmo );
          $body .= "<tr><td valign='top' align='right'>$ML{'.label.gizmo'}</td><td class='data'>$gizmo</td></tr>\n";
      }

      # website
      if ( ! $synd && $u->{'url'}) {
          my $url = LJ::ehtml($u->{'url'});
          unless ($url =~ /^https?:\/\//) {
              $url =~ s/^http\W*//;
              $url = "http://$url";
          }
          my $urlname = LJ::ehtml($u->{'urlname'} || $url);
          $url = "<a href='$url'>$urlname</a>";
          $body .= "<tr><td align='right'>$ML{'.label.website'}</td><td class='data'>$url</td></tr>\n" if ($u->{'url'});
      }

      # text message
      if ($u->{'txtmsg_status'} eq "on" && LJ::get_cap($u, "textmessaging")) {
          $body .= "<tr><td align='right'>$ML{'.label.textmessage'}</td><td class='data'>" .
                   BML::ml('.sendmessage.body2', {'user' => "$u->{'user'}", 'aopts' => "href='$LJ::SITEROOT/tools/textmessage.bml?user=$u->{'user'}'"}) . "</td></tr>";
      }
      return $body;
 };
 # /Contact Info


 # Prints out a list of users with links to their
 # userinfo pages. Apply strikethru and bolding
 # for deleted journals and friends of user.
 my $listusers = sub {
     my $users = shift;
     my $content;
     foreach my $f (@$users) {
         my $status = $f->{'statusvis'};
         my $uilink = "<a href='" . $f->profile_url() . "'>$f->{'user'}</a>";
         $uilink = "<strike>$uilink</strike>" if $status =~ /[DXS]/;
         $content .= $uilink;
         $content .= ', ';
     }
     # remove trailing ", "
     chop $content; chop $content;
     return $content;
 };

 # Moderators
 my $moderator_list = sub {
     my $content;
     # get the list of moderators
     my $moderators = LJ::load_rel_user_cache($userid, 'M') || [];

     if ($u->{'moderated'} && scalar @$moderators) {
         # now load all the usernames.
         my %userhash;
         LJ::load_userids_multiple([ map { $_, \$userhash{$_} } @$moderators ]);

         my @modlist = sort { $a->{'user'} cmp $b->{'user'} }
                         map { $userhash{$_} } @$moderators;
         $content = "<div><span class='ui_minihead'><b>Moderators (" . scalar @modlist . ")</b></span></div>\n";
         $content .= $listusers->(\@modlist);
         $content .= "<br/>\n";
     }
     return $content;
 };
 # /Moderators

 # Maintainers
 my $maintainer_list = sub {
     my $content;
     # get the list of maintainers
     my $maintainers = LJ::load_rel_user_cache($userid, 'A') || [];

     if (scalar @$maintainers) {
         # now load all the usernames.
         my %userhash;
         LJ::load_userids_multiple([ map { $_, \$userhash{$_} } @$maintainers ]);

         my @maintlist = sort { $a->{'user'} cmp $b->{'user'} }
                         map { $userhash{$_} } @$maintainers;
         $content = "<div><span class='ui_minihead'><b>Maintainers (" . scalar @maintlist . ")</b></span></div>\n";
         $content .= $listusers->(\@maintlist);
         $content .= "<br/><br/>\n";
     }
     return $content;
 };
 # /Maintainers


################################################################################
#                            NEW PAGE
################################################################################

 # -----------------------------------------------------------------------------
 # About Me --------------------------------------------------------------------
 # -----------------------------------------------------------------------------
 {
    $body .= "<div id='alpha'>\n";
    $body .= "<div class='module' id='aboutme'>\n";
    
    $body .= "<h2><span>" . LJ::ljuser($u) . "</span></h2>\n";
    $body .= "<div class='content'>";
                                  
    
    
 }
 
# Userpic ----------------------------------------------------------------------
 unless ($synd || $extid ) {
    if ($u->{'defaultpicid'}) {
        $body .= "<div class='userpic'>\n";
        my $picid = $u->{'defaultpicid'};
        my %pic;
        LJ::load_userpics(\%pic, [ $u, $picid ]);
        $body .= "<a href='$LJ::SITEROOT/allpics.bml?user=$user'><img src='$LJ::USERPIC_ROOT/$picid/$userid' width='$pic{$picid}->{'width'}' height='$pic{$picid}->{'height'}' border='0' alt='$user $ML{'.allpics'}' /></a>";
        $body .= "</div>\n";
    } else {
        my $nopic = "<i>($ML{'.userpic.none'})</i>";
        $body .= "<div class='userpic'>\n";
        $body .= "  <div style='width: 100px; height: 100px; text-align: center; border: 1px solid #ddd'>";
        $body .= $remote_isowner ? "<a href='$LJ::SITEROOT/editpics.bml'>$nopic</a>"
                              : $nopic;  
     
        $body .= "</div>\n";
        $body .= "</div>\n";
    }
 }
 # /Userpic --------------------------------------------------------------------


 # Name ------------------------------------------------------------------------
 
 ### name or 'syndicated from'
 unless ($synd) {
     unless ($u->underage || $u->{'name'} eq $u->{'journaltitle'}) {
         $body .= "<div><b>$ML{'.label.name'}</b></div><span class='data'>$u->{'name'}</span>\n";
     }
 } else {
     my $link;
     if (my $url = $u->{'url'}) {
         $link="<a href='" . LJ::ehtml($url) . "'>$u->{'name'}</a>";
     } else {
         $link=$u->{'name'};
     }
     my $icon="<a href='" . LJ::ehtml($synd->{'synurl'}) . "'>".
              "<img src='$LJ::IMGPREFIX/xml.gif' alt='XML Link' width='36' height='14' align='middle' border='0' /></a>";
     $body .= "<div><b>$ML{'.label.syndicatedfrom'}</b></div>\n".
              "<div>$link $icon</div>\n";

     # syndication status
     $body .= "<div><b>$ML{'.label.syndicatedstatus'}</b></div>\n";
     $body .= "$ML{'.syn.lastcheck'} ";
     $body .= $synd->{'lastcheck'} || $ML{'.syn.last.never'};
     my $status = {
         'parseerror' => "Parse error",
         'notmodified' => "Not Modified",
         'toobig' => "Too big",
         'posterror' => "Posting error",
         'ok' => "",     # no status line necessary
         'nonew' => "",  # no status line necessary
     }->{$synd->{'laststatus'}};
     $body .= " ($status)" if $status;

     if ($synd->{'laststatus'} eq "parseerror") {
        $body .= "$ML{'.syn.parseerror'} " . LJ::ehtml($u->{'rssparseerror'});
     }

     $body .= "<br />$ML{'.syn.nextcheck'} $synd->{'checknext'}";

 }
 
 
 # /Name -----------------------------------------------------------------------



 # Location --------------------------------------------------------------------
 if ( ! $synd && ($u->can_show_location || $viewall)) {
      if ($u->{'city'} || $u->{'state'} || $u->{'country'}) {
          $body .= "<div><b>$ML{'.label.location'}</b></div>";
          my $estate = LJ::eurl($u->{'state'});
          my $ecity = LJ::eurl($u->{'city'});
          my $ecountry = LJ::eurl($u->{'country'});

          my ($state, $city, $country);

          if ($u->{'country'}) {
              $country = $LJ::DISABLED{'directory'} ? $countries{$u->{'country'}} :
                  "<a href='$LJ::SITEROOT/directory.bml?opt_sort=ut&amp;s_loc=1&amp;loc_cn=$u->{'country'}'>".
                      $countries{$u->{'country'}} . "</a>";

              my $estate;
              if ($u->{'state'}) {
                  $state = $u->{'state'};
                  if ($u->{'country'} eq "US") { $state = $states{$state}; }
                  $estate = LJ::eurl($state);
                  $state = $LJ::DISABLED{'directory'} ? $state :
                      "<a href='$LJ::SITEROOT/directory.bml?opt_sort=ut&amp;s_loc=1&amp;loc_cn=".
                          "$u->{'country'}&amp;loc_st=$estate'>" . LJ::ehtml($state) . "</a>";
              }

              if ($u->{'city'}) {
                  my $ecity = LJ::eurl($u->{'city'});
                  $city = LJ::ehtml($u->{'city'});
                  unless ($LJ::DISABLED{'directory'}) {
                      $city = "<a href='$LJ::SITEROOT/directory.bml?opt_sort=ut&amp;s_loc=1&amp;loc_cn=".
                          "$u->{'country'}&amp;loc_st=$estate&amp;loc_ci=$ecity'>$city</a>";
                  }
              }
          }

          # Only set the 'data' style on the first Location item
          if ($city) {
              $city = "<span class='data'>" . $city . "</span>";
          } elsif ($state) {
              $state = "<span class='data'>" . $state . "</span>";
          } elsif ($country) {
              $country = "<span class='data'>" . $country . "</span>";
          }

          $body .= join(", ", grep { $_ } ($city, $state, $country));;
      }
 }
 # /Location -------------------------------------------------------------------
 
 
 # Birthday --------------------------------------------------------------------

if ( ! $synd && ($u->bday_string || $viewall)) {
    if ($u->{'bdate'} && !$com && $u->{'bdate'} ne "0000-00-00" && !$u->underage) {
        $body .= "<div><b>$ML{'.label.birthdate'}</b></div><span class='data'>".$u->bday_string."</span>\n";
    }
}
 # /Birthday -------------------------------------------------------------------
 
    $body .= "</div></div>";
 
 #------------------------------------------------------------------------------
 # /About Me -------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 
 
 
 
 
 #------------------------------------------------------------------------------
 # Actions ---------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
     $body .= "<div class='module'>\n";
     $body .= "<h2><span>Check Me</span></h2>\n";
     $body .= "<div class='content'>\n";
     
     if ($remote_isowner) {
         $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/editinfo.gif' alt='Edit Profile' /> <a href='$LJ::SITEROOT/manage/profile/'>Edit Profile</a></div>\n";
         $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/pencil.gif' alt='Update Journal' /> <a href='$LJ::SITEROOT/update.bml'>Update journal</a></div>\n";
     } else {
         $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/useradd.gif' alt='Edit Friend' /><a href='$LJ::SITEROOT/friends/add.bml?user=$user'> ";
         if ($user_isfriend) {
             $body .= "Edit Friend";
         } else {
             $body .= "Add as Friend";
         }
         $body .= "</a></div>\n";
     }
          
     $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/notify.gif' width='16' height='16' alt='Notify' title='Notify' /> <a href='$LJ::SITEROOT/manage/subscriptions/user.bml?journal=$u->{'user'}'>Notify</a></div>\n" unless $LJ::DISABLED{'esn'};
    
     unless ($LJ::DISABLED{'nudge'} || $remote_isowner || $com || $extid || $synd ) {
         $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/nudge.gif' alt='Nudge a Friend' title='Nudge a friend' border='0' /> <a href='$LJ::SITEROOT/friends/nudge.bml?user=$u->{'user'}'>Nudge</a></div>\n";
     }
     
     unless ( $remote_isowner || $extid || $synd ) {
         # TODO: Don't show site-specific stuff in general code
         my $glink = "$LJ::SITEROOT/shop/view.bml?item=paidaccount&gift=1&for=$u->{'user'}";
         $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/gift.gif' width='16' height='16' alt='Give a Gift' title='Give a Gift' /> <a href='$glink'>Give a Gift</a></div>";
     }
     
     unless ( $extid || $synd ) {
     $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/search.gif' width='16' height='16' alt='$ML{'.label.searchjournal'}' title='$ML{'.label.searchjournal'}' /> <a href='$LJ::SITEROOT/tools/search.bml?journal=$u->{'user'}'>Search Journal</a></div>\n";
     }
     
     unless ( $extid || $synd ) {
     $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/userpics.gif' width='16' height='16' alt='View All Userpics' /> <a href='$LJ::SITEROOT/allpics.bml?user=$user'>View All Userpics</a></div>\n";
     }
     
     unless ( $com || $extid || $synd ) {
     $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/scrapbook.gif' alt='Scrapbook' /> <a href='$LJ::FB_SITEROOT/$user'>View ScrapBook</a></div>\n";
     }
     
     unless ($extid) {
     my $memcount = LJ::Memories::count($userid);
        if ($memcount) {
            my $noun_name = $memcount == 1 ? 'Memory' : 'Memories';
            my $label = $ML{'.label.memories'};
            $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/memories.gif' alt='$label' title='$label' /> <a href='$LJ::SITEROOT/tools/memories.bml?user=$user'>View $noun_name ($memcount)</a></div>";
        }
     }

    unless ( $extid || $synd ) {
    $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/todo.gif' alt='Todo List' /> <a href='$LJ::SITEROOT/todo/?user=$user'>View To-do list</a></div>";
    }    
 
    if ($u->{public_key}) {
        $body .= "<div class='actionitem'><img src='$LJ::IMGPREFIX/key.gif' width='16' height='16' border='0' alt='View public key' title='View public key' /> <a href='$LJ::SITEROOT/pubkey.bml?user=$user'>View Public Key</a></div>";
    }
 
    $body .= "</div></div>\n";

    

 #------------------------------------------------------------------------------
 # /Actions --------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 #------------------------------------------------------------------------------
 # Contact Me ------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 my $contactinfo = sub {
     my $body;
     $body .= "<table cellspacing='1' cellpadding='1' width='100%'>\n";
     my @emails = $u->emails_visible($remote);
     if (@emails) {
         $body .= "<tr><td><b>$ML{'.label.email'}</b></td><td>";
         foreach my $email (@emails) {
             $body .= ($u->{'opt_mangleemail'} eq "Y" || $email =~ /\@livejournal\.com$/)
                       ? $mangleaddress->($email)
                       : "<a href='mailto:$email'>$email</a>";
         }
         $body .= "</td></tr>";
     }
     
     # website
      if ( ! $synd && $u->{'url'}) {
          my $url = LJ::ehtml($u->{'url'});
          unless ($url =~ /^https?:\/\//) {
              $url =~ s/^http\W*//;
              $url = "http://$url";
          }
          my $urlname = LJ::ehtml($u->{'urlname'} || $url);
          $url = "<a href='$url'>$urlname</a>";
          $body .= "<tr><td><b>$ML{'.label.website'}</b></td><td>$url</td></tr>\n" if ($u->{'url'});
      }

      foreach my $k (qw(aolim icq yahoo msn jabber google_talk skype gizmo)) {
          $u->{$k} = LJ::ehtml($u->{$k});
      }

      if ($u->{'aolim'}) {
          my $qim = $u->{'aolim'};
          $qim =~ s/ //g;
          $body .= "<tr><td><b>$ML{'.label.aolim'}</b></td><td><img alt='AIM status' src='http://big.oscar.aol.com/$qim?on_url=http://www.aol.com/aim/gr/online.gif&amp;off_url=http://www.aol.com/aim/gr/offline.gif' height='17' width='14' /> $u->{'aolim'}</td></tr>\n";
      }
      if ($u->{'icq'}) {
          $body .= "<tr><td><b>$ML{'.label.icquin'}</b></td><td>";
          $body .= "<img alt='ICQ status' src='http://web.icq.com/whitepages/online?icq=$u->{'icq'}&amp;img=5' height='18' width='18' /> ";
          $body .= "$u->{'icq'}";
          $body .= "</td></tr>\n";
      }
      if ($u->{'yahoo'}) {
          $body .= "<tr><td><b>$ML{'.label.yahooid'}</b></td><td>";
          $body .= "<img alt='Yahoo status' src='http://opi.yahoo.com/online?u=$u->{'yahoo'}&amp;m=g&amp;t=0' width='12' height='12' /> <a href='http://profiles.yahoo.com/$u->{'yahoo'}'>$u->{'yahoo'}</a> \n";
          $body .= "</td></tr>\n";
      }
      if ($u->{'msn'}) {
          my $msnname = ($u->{'opt_mangleemail'} eq "Y") ? $mangleaddress->($u->{'msn'}) : $u->{'msn'};
          $body .= "<tr><td><b>$ML{'.label.msnusername'}</b></td><td>$msnname</td></tr>\n";
      }
      if ($u->{'jabber'}) {
          my $jabber = $mangleaddress->($u->{'jabber'});
          $body .= "<tr><td><b>$ML{'.label.jabber'}</b></td><td>$jabber</td></tr>\n";
      }
      if ($u->{'google_talk'}) {
          my $google = $mangleaddress->($u->{'google_talk'});
          $body .= "<tr><td><b>$ML{'.label.googletalk'}</b></td><td>$google</td></tr>\n";
      }
      if ($u->{'skype'}) {
          my $skype = $mangleaddress->($u->{'skype'});
          $body .= "<tr><td><b>$ML{'.label.skype'}</b></td><td>$skype</td></tr>\n";
      }
      if (my $gizmo = $u->gizmo_account) {
          $gizmo = $mangleaddress->( $gizmo );
          $body .= "<tr><td><b>$ML{'.label.gizmo'}</b></td><td>$gizmo</td></tr>\n";
      }

      

      # text message
      if ($u->{'txtmsg_status'} eq "on" && LJ::get_cap($u, "textmessaging")) {
          $body .= "<tr><td><b>$ML{'.label.textmessage'}</b></td><td>" .
                   BML::ml('.sendmessage.body2', {'user' => "$u->{'user'}", 'aopts' => "href='$LJ::SITEROOT/tools/textmessage.bml?user=$u->{'user'}'"}) . "</td></tr>";
      }
      $body .= "</table>\n";
      return $body;
 };
 if ($u->share_contactinfo($remote) || $viewall) {
 $body .= "<div class='module'>\n";
 $body .= "<h2><img src='$LJ::IMGPREFIX/contact.gif' alt='Contact' /> <span>Contact Me</span></h2>\n";
 $body .= "<div class='content'>\n";
 $body .= $contactinfo->();
 $body .= "</div></div>\n";
 }
 
 #------------------------------------------------------------------------------
 # /Contact Me -----------------------------------------------------------------
 #------------------------------------------------------------------------------ 
 
 
 
 
 #------------------------------------------------------------------------------
 # School Me -------------------------------------------------------------------
 #------------------------------------------------------------------------------ 

 my $schoollist;
 if ($u->{'journaltype'} ne 'Y' &&
     !$LJ::DISABLED{'schools'}  &&
     (($u->{'opt_showschools'} eq '' || $u->{'opt_showschools'} eq 'Y') ||
      ($u->{'opt_showschools'} eq 'F' && $remote_isfriend) || $viewall)) {

     my $schools = LJ::Schools::get_attended($u);

     # Show if journal is not a community or
     # if it is a community and there are schools defined
     if ($u->{'journaltype'} ne 'C' || ($schools && %$schools)) {

         if ($schools && %$schools) {
             my @links;
             foreach my $sid (sort { $schools->{$a}->{year_start} <=> $schools->{$b}->{year_start} } keys %$schools) {
                 my $schoolname = "<a href='$LJ::SITEROOT/schools/" .
                     "?ctc=" . LJ::eurl($schools->{$sid}->{country}) .
                     "&sc=" . LJ::eurl($schools->{$sid}->{state}) .
                     "&cc=" . LJ::eurl($schools->{$sid}->{city}) .
                     "&sid=" . $sid .
                     "'>" . LJ::ehtml($schools->{$sid}->{name}) . "</a>";
                 my $schoolinfo .= $schools->{$sid}->{city};
                 $schoolinfo .= $schools->{$sid}->{state} ? ", $schools->{$sid}->{state}" : "";
                 if ($schools->{$sid}->{country} ne 'US') {
                     my %countries;
                     LJ::load_codes({ country => \%countries });
                     $schoolinfo .= ", $countries{$schools->{$sid}->{country}}";
                 }

                 my $schooldates;
                 if (defined $schools->{$sid}->{year_start}) {
                     $schooldates .= " (" . $schools->{$sid}->{year_start};

                     if ($schools->{$sid}->{year_start} != $schools->{$sid}->{year_end}) {
                         $schooldates .= " - " . ($schools->{$sid}->{year_end} || "present");
                     }

                     $schooldates .= ")";
                 }

                 my $link .= $schoolname . "<br/><small>" . $schoolinfo . $schooldates . "</small><br />\n";

                 push @links, $link;
             }
             $schoollist .= join('', @links);
         } else {
             $schoollist .= "<i>$ML{'.label.noschools'}</i>";
         }

         if ($remote_isowner) {
             $schoollist .= ' <small>';
             $schoollist .= BML::ml('Actionlink', { 'link' => "<a href='$LJ::SITEROOT/schools/manage.bml'>$ML{'.label.manageschools'}</a>" });
             $schoollist .= '</small>';
         }

     }
 }

 if ($schoollist) {
     $body .= "<div class='module'>\n";
     $body .= "<h2><img src='$LJ::IMGPREFIX/schools.gif' border='0' alt='Schools' /> <span>School Me</span></h2>\n";
     $body .= "<div class='content'>\n";
     $body .= $schoollist;
     $body .= "</div></div>\n";
 }
 
 #------------------------------------------------------------------------------
 # /School Me ------------------------------------------------------------------
 #------------------------------------------------------------------------------ 
 
 
 
 #------------------------------------------------------------------------------
 # Stats -----------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
    $body .= "<div class='module'>\n";
    $body .= "<h2>". $u->caps_icon . "<span><a href='$LJ::SITEROOT/support/faqbrowse.bml?faqid=38'>" . LJ::name_caps($u->{'caps'}) . "</a></span></h2>\n";
    $body .= "<div class='content'>\n";
    
    $body .= "<table cellspacing='1' cellpadding='1'>\n";
    $body .= "<tr><td><b>User Number: </b></td><td>$u->{'userid'}</td></tr>";
    $u->{'timecreate'} =~ /(.*) .*/;
    $body .= "<tr><td><b>Joined:</b></td><td>$1</td></tr>\n";
    $body .= "<tr><td><b>Comments Posted:</b></td><td>$num_com_post</td> </tr>\n";
    $body .= "<tr><td><b>Comments Received:</b></td><td>$num_com_got</td></tr>\n";
    
    my $points = $dbr->selectrow_array("SELECT SUM(points) AS 'points' FROM supportpoints WHERE userid=$userid");
    if ($points) {
        $body .= "<tr><td><b><a href='$LJ::SITEROOT/support/'>$ML{'.label.supportpoints'}</a>:</b></td><td><a href='$LJ::SITEROOT/support/highscores.bml'>" . &comma($points) . "</a></td></tr>";
    }
    
    $body .= "</table></div></div>\n";
    
 
 #------------------------------------------------------------------------------
 # /Stats ----------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 
 $body .= "</div>\n";
 $body .= "<div id='beta'>\n";
 
 
 #------------------------------------------------------------------------------
 # Journal ---------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 $body .= "<div class='module'>\n";
 $body .= "<fieldset id='journal'>\n";
 $body .= "<legend><img src='$LJ::IMGPREFIX/journal.gif' alt='Journal' align='top' /> <a href='$jbase/'>Journal</a>";
 if ($remote_isowner) {
            $body .= "<span class='edit'><a href='$LJ::SITEROOT/customize/'>Edit</a></span>";
        } 
 $body .= "</legend>\n<div class='content'>\n";
 
 if ($u->{'journaltitle'}) {
     $body .= "<div class='journal_title'><a href='$jbase/'>" . LJ::ehtml($u->{'journaltitle'}) . "</a></div>";
     if ($u->{'journalsubtitle'}) {
         $body .= "<div class='journal_sub'>" . LJ::ehtml($u->{'journalsubtitle'}) . "</div>";
     } 
 } else {
        $body .= "<div class='journal_title'><a href='$jbase/'>View Journal</a></div>\n";
     }
 my $lastupdated;
 if ($u->{'timeupdate'}) {
     my $secondsold = $u->{'secondsold'};
     my $num;
     if ($secondsold > 60*60*24*7) {
         $num = int($secondsold / (60*60*24*7));
         $lastupdated .= $num == 1 ? $ML{'.timeupdate.weekago'}
                            : BML::ml('.timeupdate.weeksago',{'num'=>$num});
     } elsif ($secondsold > 60*60*24) {
         $num = int($secondsold / (60*60*24));
         $lastupdated .= $num == 1 ? $ML{'.timeupdate.dayago'}
                            : BML::ml('.timeupdate.daysago',{'num'=>$num});
     } elsif ($secondsold > 60*60) {
         $num = int($secondsold / (60*60));
         $lastupdated .= $num == 1 ? $ML{'.timeupdate.hourago'}
                            : BML::ml('.timeupdate.hoursago',{'num'=>$num});
     } elsif ($secondsold > 60) {
         $num = int($secondsold / (60));
         $lastupdated .= $num == 1 ? $ML{'.timeupdate.minuteago'}
                            : BML::ml('.timeupdate.minutesago',{'num'=>$num});
     } else {
         $num = $secondsold;
         $lastupdated .= $num == 1 ? $ML{'.timeupdate.secondago'}
                            : BML::ml('.timeupdate.secondsago',{'num'=>$num});
     }
 }
 $body .= "<div class='journal_stats'>\n<table cellspacing='1' cellpadding='1'>\n";
 $body .= "<tr><td><b>Last updated:</b></td><td>$lastupdated</td></tr>" if $lastupdated;
 $body .= "<tr><td><b>Entries: </b></td><td>" . $journalentry_count->() . "</td></tr>";
 
 $body .= "</table></div></div></fieldset></div>\n";
 
 #------------------------------------------------------------------------------
 # /Journal --------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 
 
 #------------------------------------------------------------------------------
 # Bio -------------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
  if ($u->{'has_bio'} eq "Y") {
     my $label = $com ? $ML{'.about.comm'} : "Biography";

     if ($u->{journaltype} eq 'I' && $LJ::ONLY_USER_VHOSTS) {
         $u->{'bio'} = LJ::ehtml($u->{'bio'}); # XXXXX FIXME: TEMP FIX
         $u->{'bio'} =~ s!\n!<br/>!g;
     } else {
         LJ::CleanHTML::clean_userbio(\$u->{'bio'});
     }

     $body .= "<div class='module'>\n";
     $body .= "<fieldset>\n";
     $body .= "<legend><img src='$LJ::IMGPREFIX/biography.gif' alt='Bio' border='0' align='top' /> $label";
     if ($remote_isowner) {
            $body .= "<span class='edit'><a href='$LJ::SITEROOT/manage/profile/'>Edit</a></span>";
        } 
     $body .= "</legend>\n<div class='content'>\n";
     $body .= "$u->{'bio'}\n";
     $body .= "</div></fieldset></div>\n";
 }
 
 
 #------------------------------------------------------------------------------
 # /Bio ------------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
 
 
 
 
 #------------------------------------------------------------------------------
 # Interests -------------------------------------------------------------------
 #------------------------------------------------------------------------------
 
  if (@$intu) {
     $body .= "<div class='module'>\n";
     $body .= "<fieldset>\n";
     
     my $intcount = 0;
     my $countcommon = 0;
     my $intlist = "";
     foreach my $int (@$intu) {
         next if $intcount++ > 150;
         LJ::text_out(\$int->[1]); # 1==interest
         my $eint = LJ::eurl($int->[1]);
         if ($int->[2] > 1) {  # 2==intcount
             if ($remote_interest{$int->[0]}) {  # 0==intid
                 $intlist .= "<span class='incommon'><a href='$LJ::SITEROOT/interests.bml?int=$eint'>$int->[1]</a></span>, ";
                 $countcommon++;
             } else {
                 $intlist .= "<a href='$LJ::SITEROOT/interests.bml?int=$eint'>$int->[1]</a>, ";
             }
         } else {
             $intlist .= "$int->[1], ";
         }
     }
     $body .= "<legend><img src='$LJ::IMGPREFIX/interests.gif' alt='Interests' border='0' align='top' /> <a href='$LJ::SITEROOT/interests.bml'>$ML{'.label.interests'}</a> ($intcount)";     
     if ($remote_isowner) {
            $body .= "<span class='edit'><a href='$LJ::SITEROOT/manage/profile/'>Edit</a></span>";
        } 
     $body .= "</legend>\n<div class='content'>\n";
     chop $intlist; chop $intlist;  # remove trailing ", "
     if ($intcount > 150) {
         my $notshown = $intcount - 150;
         $intlist .= BML::ml('.label.intsnotshown',{'intnotshown'=>$notshown});
     }

  
     $body .=  $intlist;
     if ($remote) {
         my $link = "$LJ::SITEROOT/interests.bml?mode=enmasse";
         $link .= "&fromuser=$user" unless ($remote->{'userid'} == $userid);
         $body .= " <small>";
         my $mlcode = ($remote_isowner) ? '.label.interests.removesome'
                                        : '.label.interests.modifyyours';
         $body .= BML::ml('Actionlink', { 'link' => "<a href='$link'>$ML{$mlcode}</a>" });
         $body .= "</small>";
     }
     $body .= "</div></fieldset></div>\n";
 }
 
 #------------------------------------------------------------------------------
 # /Interests ------------------------------------------------------------------
 #------------------------------------------------------------------------------
 

 
 #------------------------------------------------------------------------------
 # Friends, Communities, and Feeds ---------------------------------------------
 #------------------------------------------------------------------------------

 # Generates the HTML display for a list of users
 # TODO: Need to handle friend-of and member-of display for users looking at
 # their own profile, bold mutually friended and communities being watched
 my $displayusers = sub {
     my $users = shift;
     my $label = shift;
     my $hilite_common = shift || 1;
     $hilite_common = 0 if (!$remote || $remote_isowner);
     my $dontfollow = shift;

     my $count = my $incommon = 0;
     my $userlist = "";
     foreach my $f (@$users) {
         my $status = $f->{'statusvis'};
         my $nofollow = $remote_friendid{$_->{'userid'}} ? "" : " rel='nofollow'";
         my $ulink = "<a $nofollow href='" . $f->profile_url() . "'>$f->{'user'}</a>";
         $ulink = "<strike>$ulink</strike>" if $status =~ /[DXS]/;
         if ( $hilite_common && $remote_friendid{$_->{'userid'}} ) {
             $ulink = "<span class='incommon'>$ulink</span>";
             $incommon++;
         }
         $userlist .= "$ulink, ";
         if (++$count == $MAX_FRIENDOF_SHOW && $GET{'mode'} ne "full") {
             $friendsof{'clipped'} = 1;
             last;
         }
     }
     # chop off ", " at the end
     chop $userlist; chop $userlist;
     $body .= ", ..." if $friendsof{'clipped'} || $friendsof{'load_clipped'};

     my $display = "<div><b>$label ";
     $display .= "($count";
     if ($friendsof{'clipped'} || $friendsof{'load_clipped'}) {
        $display .= "+) <a href='" . $u->profile_url() . "?mode=full'>View All</a>";
     } else {
        $display .= ")";
        }
     $display .= "</b><br />\n" . $userlist;
     $friendsof{'clipped'} = 0; # reset for @friend_of display
     $display .= "</div>\n";

     return $display;
 };

 # friend of and mutual friends display
 # there are two options that will affect what gets shown below: opt_hidefriendofs, opt_showmutualfriends
 # if the option to show mutual friends is on, then what was known as the friend of list is broken down
 # into two lists: mutual friends (people you list and who also list you back) and 'also friend of', which
 # lists the people you don't also list as friends.  you can hide your friend of list, and leave just
 # your mutual friends list showing, or you can not split them and have both be hidden.
 my $mutualfriends;
 my $friendedby;
 my $member_of_comm;
 unless ($synd) {
     if ($friendsof{'loaded'}) {
         my $label;
         my $nofollow = 1;
         if ($u->{'opt_showmutualfriends'} && @mutual) {
             $mutualfriends = $displayusers->(\@mutual, "Mutual Friends");
         }
         if ($friendsof{'display'} && @friend_of) {
             my $label = $com ? $ML{'.friendof.comm'} :
                      ($u->{'opt_showmutualfriends'} ? "Friend of" : $ML{'.friendof.user'});
             unless ($u->{'opt_hidefriendofs'}) {
                 $friendedby = $displayusers->(\@friend_of, $label, 1, $nofollow);
             }
         };
         if ($friendsof{'display'} && @member_of) {
             $member_of_comm = $displayusers->(\@member_of, $ML{'.label.memberof'});
         };
     }
 } else {  # Syndication journals are special
    $body .= "<div class='module'>\n";
    $body .= "<fieldset>\n";
    $body .= "<legend><img src='$LJ::IMGPREFIX/userinfo.gif' title='' alt='Watchers' border='0' align='top' /> Watchers</legend>\n";
    $body .= "<div class='content'>\n";
    $body .= "$ML{'.friendof.syndreadcount'} ";
    $body .= "($friendsof{'count'})\n";
    $body .= "</div></fieldset></div>\n";
 }

 unless ($synd || $LJ::FORCE_EMPTY_FRIENDS{$userid}) {
     my $label = $com ? $ML{'.friends.comm'} : $ML{'.friends.user'};
     my $text = LJ::ehtml($ML{'.label.frpeople'});
     $body .= "<div class='module'>\n";
     $body .= "<fieldset>\n";
     $body .= "<legend><img src='$LJ::IMGPREFIX/userinfo.gif' title='$text' alt='$text' border='0' align='top' /> <a href='$LJ::SITEROOT/friends/'>$label</a>";
     if ($remote_isowner) {
            $body .= "<span class='edit'><a href='$LJ::SITEROOT/friends/edit.bml'>Edit</a></span>";
        }
     $body .= "</legend>\n";
     $body .= "<div class='content'>\n";
     $friends{'display'} = 0 if $friends{'count'} > $MAX_FRIENDS_SHOW;
     if ($friends{'count'}) {
         if (!$friends{'loaded'} || !$friends{'display'}) {
             $body .= "" . $friends{'count'} . " friends<br />";
             $body .= "<a href='$LJ::SITEROOT/directory.bml?s_fro=1&amp;fro_user=$u->{'user'}'> " . ($com ? $ML{'.label.viewmembers'} : $ML{'.label.viewfriends'}) .  "</a>.";
         } elsif ($u->{'journaltype'} eq 'P' or $u->{'journaltype'} eq 'S') {
             # personal/shared journals have a special way of showing their friends list, it breaks it down into
             # three sublists: personal/shared, community/news, syndication
             my (@pfriends, @cfriends, @yfriends);

             foreach my $f (@friends) {
                 if ( $f->{'journaltype'} eq 'P' or $f->{'journaltype'} eq 'S' or $f->{'journaltype'} eq 'I' ) {
                     push @pfriends, $f;
                 } elsif ( $f->{'journaltype'} eq 'C' or $f->{'journaltype'} eq 'N' ) {
                     push @cfriends, $f;
                 } elsif ( $f->{'journaltype'} eq 'Y' ) {
                     push @yfriends, $f;
                 }
             }

             # now spit out the HTML
             if (@pfriends) {
                 $body .= $mutualfriends . "<br/>" if ($mutualfriends);
                 $body .= $displayusers->(\@pfriends, "Friends");
                 $body .= "<br/>\n";
                 $body .= $friendedby if ($friendedby);
                 $body .= "</div></fieldset></div>\n";
             }
             
       
             if (@cfriends) {
                 $body .= "<div class='module'>\n";
                 $body .= "<fieldset>\n";
                 my $text = LJ::ehtml($ML{'.label.frcommunity'});
                 $body .= "<legend><img src='$LJ::IMGPREFIX/community.gif' title='$text' alt='$text' border='0' align='top' /> <a href='$LJ::SITEROOT/community/manage.bml'>$text</a>";
                 if ($remote_isowner) {
                        $body .= "<span class='edit'><a href='$LJ::SITEROOT/friends/edit.bml'>Edit</a></span>";
                 }
                 $body .= "</legend>";
                 $body .= "<div class='content'>";   
                 $body .= $displayusers->(\@cfriends, "Watching");
                 $body .= "<br/>";
                 $body .= "$member_of_comm";
                 $body .= "<br/>";
                 

                my $list;
                if ($com || $u->{'journaltype'} eq 'S') {
                 # load user who can post to this community
                $list = LJ::load_rel_user($u, 'P');
                    } else {
                    # load communities/accounts this user can post to
                $list = LJ::load_rel_target($u, 'P');
                    }
                my %u;
                my @ids = @$list;
                my $count = @ids;
                my $chopped = 0;
                my $CHOP_POINT = 500;
                if (@ids > $CHOP_POINT) {
                    @ids = splice(@ids, 0, $CHOP_POINT);
                    $chopped = 1;
                }
                LJ::load_userids_multiple([ map { $_ => \$u{$_} } @ids ]);
                my @accesslist = sort { $a->{user} cmp $b->{user} } grep { $_->{statusvis} eq 'V' } values %u;

                if (my $vcount = @accesslist) {
                    $count = $vcount if $count < $CHOP_POINT;
                    $body .= "<b>Posting Access ($count)</b><br/>";
                    $body .= join(", ", map { "<a href='" . $_->profile_url() . "'>$_->{user}</a>" } @accesslist);
                    $body .= ", ..." if $chopped;
                 }

             }
             $body .= "</div></fieldset></div>\n";
             if (@yfriends) {
                 my $text = LJ::ehtml($ML{'.label.frsyndication2'});
                 $body .= "<div class='module'>\n";
                 $body .= "<fieldset>\n";
                 $body .= "<legend><img src='$LJ::IMGPREFIX/syndicated.gif' title='$text' alt='$text' border='0' align='top' /> $text ";
                 if ($remote_isowner) {
                        $body .= "<span class='edit'><a href='$LJ::SITEROOT/friends/edit.bml'>Edit</a></span>";
                 }
                 $body .= "</legend>\n";
                 $body .= "<div class='content'>\n";
                 $body .= $displayusers->(\@yfriends, "Watching");
                 $body .= "</div></fieldset></div>\n";
             }
         }
         if ($com) {
            if (my $list = $maintainer_list->()) {
                 $body .= $list;
             }
             if (my $list = $moderator_list->()) {
                 $body .= $list;
             }
             
             $body .= "<span class='ui_minihead'><b>Members (" . $friends{'count'} . ")</b></span><br />\n";
             $body .= $listusers->(\@friends);
             $body .= "<br/><br/>";
             
             $body .= "<span class='ui_minihead'><b>Watchers (" . scalar @friend_of . ")</b></span><br />\n";
             $body .= $listusers->(\@friend_of);
             $body .= "\n";
             $body .= "</div></fieldset></div>\n";
         }
     } else {
         my $text = LJ::ehtml($ML{'.label.frpeople'});
         $body .= "<div><span class='ui_subhead'><img src='$LJ::IMGPREFIX/userinfo.gif' title='$text' alt='$text' border='0' align='top' /> Friends</span></div>\n";
         $body .= "<div>" . $ML{'.label.nofriends'} . "</div>\n";
         $body .= "</div></fieldset></div>\n";
     }
     $body .= "\n";
 }

$body .= "</div>";
 

return;


_code?><?page
windowtitle=><?_code return $windowtitle; _code?>
title=><?_code return $title; _code?>
body=><?_code return $body; _code?>
head<=
<?_code
    LJ::need_res('stc/lj_base.css');
    return $head;
_code?>
<=head
page?><?_c <LJDEP>
lib: cgi-bin/ljlib.pl, cgi-bin/cleanhtml.pl
link: htdocs/manage/profile/index.bml, htdocs/userinfo.bml, htdocs/users
link: htdocs/community/join.bml, htdocs/community/leave.bml, htdocs/friends/add.bml, htdocs/todo/index.bml
link: htdocs/tools/memories.bml, htdocs/tools/tellafriend.bml, htdocs/allpics.bml
link: htdocs/tools/textmessage.bml, htdocs/interests.bml, htdocs/support/faqbrowse.bml, htdocs/download/index.bml
link: htdocs/support/index.bml
img: img/btn_addfriend.gif, img/btn_todo.gif, img/btn_memories.gif, img/btn_tellfriend.gif, img/talk/md10_thumbup.gif, img/xml.gif
hook: userinfo_html_by_user, userinfo_rows
</LJDEP> _c?>

