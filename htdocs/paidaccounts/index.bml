<?_code
use strict;
use vars qw(%GET %POST $body);

######################################################################
#
# WARNING!!!!111oneoneone
#
# Yarr off the map now matey, here thar be business logic
#
######################################################################

my %purchase_options = (
    'upgrade_free_basic_6' => {
        'type' => 1,
        'duration' => 6,
        'amount' => 15,
    },
    'upgrade_free_basic_12' => {
        'type' => 1,
        'duration' => 12,
        'amount' => 24,
    },
    'upgrade_free_basic_99' => {
        'type' => 1,
        'duration' => 99,
        'amount' => 48,
    },
    'upgrade_free_premium_6' => {
        'type' => 2,
        'duration' => 6,
        'amount' => 20,
    },
    'upgrade_free_premium_12' => {
        'type' => 2,
        'duration' => 12,
        'amount' => 36,
    },
    'upgrade_free_premium_99' => {
        'type' => 2,
        'duration' => 99,
        'amount' => 72,
    },
    'upgrade_basic_basic_99' => {
        'type' => 1,
        'duration' => 99,
        'amount' => 36,
    },
    'upgrade_basic_premium_12' => {
        'type' => 2,
        'duration' => 12,
        'amount' => 24,
    },
    'upgrade_basic_premium_99' => {
        'type' => 2,
        'duration' => 99,
        'amount' => 60,
    },
    'upgrade_basic_99_premium_99' => {
        'type' => 2,
        'duration' => 99,
        'amount' => 30,
    },
    'upgrade_premium_premium_99' => {
        'type' => 2,
        'duration' => 99,
        'amount' => 50,
    },
    'extension_basic_6' => {
        'type' => 1,
        'duration' => 6,
        'amount' => 15,
    },
    'extension_basic_12' => {
        'type' => 1,
        'duration' => 12,
        'amount' => 24,
    },
    'extension_premium_6' => {
        'type' => 2,
        'duration' => 6,
        'amount' => 20,
    },
    'extension_premium_12' => {
        'type' => 2,
        'duration' => 12,
        'amount' => 36,
    },
);

# Default upgrades for new and free users
my @available_upgrades = ('upgrade_free_basic_6', 'upgrade_free_basic_12', 'upgrade_free_basic_99',
                          'upgrade_free_premium_6', 'upgrade_free_premium_12', 'upgrade_free_premium_99');

my %errors;

my $remote = LJ::get_remote();
my $user = $GET{'user'};
   $user = $POST{'jf_pay_target'} if $POST{'jf_pay_for'} eq "gift";

# If this is for an existing user, load them up and see what upgrades they can get
if ($remote || $user) {
    my $u = $POST{'jf_pay_for'} eq "gift" ? LJ::load_user($user) : $remote;

    if ($u && DW::Pay::get_current_account_status($u)) {
        my $paid_status = DW::Pay::get_paid_status($u);
     
        # If they have a basic permanent account, the only option is the premium permanent
        if ($paid_status->{'permanent'}) {
            if ($paid_status->{'typeid'} == 1) {
                @available_upgrades = ( 'upgrade_basic_99_premium_99' );
            } else {
                $errors{'user'} = "This account is not eligible for any upgrades";  
                # premium permanents can't upgrade
            }
        } else {
            # If they have a premium account, they can extend or upgrade to permanent
            if ($paid_status->{'typeid'} == 2) {
                @available_upgrades = ( 'extend_premium_6', 'extend_premium_12', 'upgrade_premium_premium_99' );
            }
            
            # If they have a basic account, they can extend, or upgrade to premium or permanent
            if ($paid_status->{'typeid'} == 1) {
                @available_upgrades = ( 'extend_basic_6', 'extend_basic_12', 'upgrade_basic_basic_99',
                                        'upgrade_basic_premium_6', 'upgrade_basic_premium_12', 'upgrade_basic_premium_99');
            }
        }
    } elsif (!$u) {
        $errors{'user'} = "The user &ldquo;$user&rdquo; doesn't exist";
    }
}

# POST processing
if (LJ::did_post()) {
    my $purchase_option = $POST{'jf_pay_option'};

    $errors{'option'} = "You have selected an invalid upgrade option" 
        unless $purchase_options{$purchase_option};
    $errors{'option'} = "This user is ineligible for the chosen upgrade. Please select another option" 
        unless grep(/^$purchase_option$/, @available_upgrades);

    my ($target_user, $target_name, $from_user);

    if ($POST{'jf_pay_for'} eq "existing") {
        $target_user = $remote;
    } elsif ($POST{'jf_pay_for'} eq "gift") {
        $target_user = LJ::load_user($POST{'jf_pay_target'});
        $errors{'user'} = "The username &ldquo;".$POST{'jf_pay_target'}."&rdquo; doesn't exist" unless $target_user;
    } elsif ($POST{'jf_pay_for'} eq "new") {
        $target_name = $POST{'jf_pay_target'};
        if ($target_name) {
            my $u = LJ::load_user($target_name);
            $errors{'user'} = "The username &ldquo;$target_name&rdquo; is already taken, please select another username" if $u;
        } else {
            $errors{'user'} = "Please specify the new username you'd like to create";
        }
    }

    unless (%errors) {
        my $option = $purchase_options{$purchase_option};
        my $pp_url = DW::Pay::pp_get_checkout_url($target_user, $target_name, $from_user, 
                                                  $option->{'type'}, $option->{'duration'}, $option->{'amount'});
        if ($pp_url) {
            return BML::redirect( $pp_url );
        } else {
            $errors{'system'} = "Issues.";
        }
    }
}

if (%errors) {
    $body .= "<?errorbar Please fix the following errors: <ul>";
    foreach my $error (keys %errors) {
        $body .= '<li>'.$errors{$error}.'</li>';
    }
    $body .= "</ul> errorbar?>";
}

$body .= <<EOF;

<?h1 Purchasing an Account h1?>

<?p There are some features on $LJ::SITENAME that are only available to Paid
Accounts. This is necessary, because $LJ::SITENAME must pay for bandwidth and
server costs. If a feature uses too much bandwidth, uses too much server
processing power, or places too much of a strain upon the databases, it is
reserved for Paid Accounts only. Additionally, some features are reserved
for Paid Accounts to show our appreciation for users who are supporting us.
p?>

EOF

my @features = (
                {
                    'name' => "Post new journal entries &amp; comments",
                    'free' => 1,
                    'basic' => 1,
                    'premium' => 1,
                },
                {                
                    'name' => "Customize journal appearance",
                    'free' => 1,
                    'basic' => 1,
                    'premium' => 1,
                },
                {
                    'name' => "Display user pictures on posts and comments",
                    'free' => 10,
                    'basic' => 500,
                    'premium' => 1000,
                },
                {
                    'name' => "Maximum number of friends",
                    'free' => 1000,
                    'basic' => 2500,
                    'premium' => "Unlimited",
                },
                {
                    'name' => "Import new RSS feeds per month",
                    'free' => 0,
                    'basic' => 5,
                    'premium' => 10,
                },
                {
                    'name' => "Create and post custom polls &amp; surveys",
                    'free' => 0,
                    'basic' => 1,
                    'premium' => 1,
                },
                {
                    'name' => "Receive text messages without sharing your number",
                    'free' => 0,
                    'basic' => 1,
                    'premium' => 1,
                },
                {
                    'name' => 'Receive a custom e-mail address',
                    'free' => 0,
                    'basic' => 1,
                    'premium' => 1,
                },
                {
                    'name' => "View friends-of-friends page",
                    'free' => 0,
                    'basic' => 1,
                    'premium' => 1,
                },
                {
                    'name' => "Create custom journal designs",
                    'free' => 0,
                    'basic' => 1,
                    'premium' => 1,
                },
                );

sub feature_matrix_display {
    my $feature_value = shift;
    return '&nbsp;' unless $feature_value;
    return '<span style="font-family: Arial">&#10003;</span>' if int($feature_value) && $feature_value == 1;
    return $feature_value;
}

### Print out feature matrix
$body .= '<?h1 Account Features h1?>';
$body .= '<div style="text-align: center; font-family: Arial sans-serif">';
$body .= '<table style="margin-left: auto; margin-right: auto; width: 32em;" cellspacing="0">';
$body .= '<tr><th style="text-align: left">Features</th>';
$body .= '<th style="text-align: center">Free</th>';
$body .= '<th style="text-align: center">Basic</th>';
$body .= '<th style="text-align: center">Premium</th></tr>';

foreach my $feature ( @features ) {
    $body .= '<tr>';
    $body .= '<td class="feature" style="border-bottom: 1px solid #ccc; text-align: left">'.$feature->{'name'}.'</td>';
    $body .= '<td class="free" style="text-align: center; border-bottom: 1px solid #ccc">'.feature_matrix_display($feature->{'free'}).'</td>';
    $body .= '<td class="basic" style="text-align: center; border-bottom: 1px solid #ccc">'.feature_matrix_display($feature->{'basic'}).'</td>';
    $body .= '<td class="premium" style="text-align: center; border-bottom: 1px solid #ccc">'.feature_matrix_display($feature->{'premium'}).'</td>';
    $body .= '</tr>';
}
$body .= '</table></div>';

### Purchase options:
$body .= '<form method="POST" action="./index.bml">';
$body .= '<?h1 Purchase Account h1?>';
$body .= "<?p If you would like to purchase a $LJ::SITEROOT Paid Account, please fill out the form below: p?>";
$body .= '<div style="text-align: center">';

if ($errors{'user'}) {
    $body .= '<p style="color: #f00">'.$errors{'user'}.'</p>';
}
$body .= "<?p Purchase a $LJ::SITEROOT Paid Account for: p?>";
$body .= '<select name="jf_pay_for">';
if ($remote) { $body .= '<option value="existing">my own journal ('.$remote->{user}.')</option>'; }
$body .= '<option value="new">a new journal</option>';
$body .= '<option value="gift">a friend\'s journal</option>';
$body .= '</select>';

my $jf_pay_target = $POST{'jf_pay_target'} || $GET{'user'} || $remote->{'user'};
$body .= '<input type="text" name="jf_pay_target" value="'.$jf_pay_target.'" />';

# This is ghetto but quick dev
$body .= '<div style="clear: both">';
my ($basic, $premium); my $ct = 0;
foreach my $upgrade (@available_upgrades) {
    $ct++;
    my $badge = '';
    my $form_id = $upgrade;
    $upgrade = $purchase_options{$upgrade};
    my $duration = $upgrade->{'duration'} == 99 ? 'Permanent' : $upgrade->{'duration'}.' months';
    my $checked = $ct == 1 ? ' checked="checked"' : '';

    $badge .= '<td><div style="background-color: #b28099; color: #fff; width: 7em; border: 1px solid #555; margin: .25em; text-align: center">';
    $badge .= '<label><input type="radio" name="jf_pay_option" value="'.$form_id.'" '.$checked.' /><br />';
    $badge .= $duration.'<br />$'.$upgrade->{'amount'}.' USD</label></div></td>';

    if ($upgrade->{'type'} == 1) {
        $basic .= $badge;
    } else {
        $premium .= $badge;
    }
}
if ($errors{'options'}) {
    $body .= '<p style="color: #f00">'.$errors{'options'}.'</p>';
}
$body .= '<div style="clear: both"><?h1 Basic h1?><table style="width: 23em; margin-left: auto; margin-right: auto"><tr>'.$basic.'</tr></table></div>' if $basic;
$body .= '<div style="clear: both"><?h1 Premium h1?><table style="width: 23em; margin-left: auto; margin-right: auto"><tr>'.$premium.'</tr></table></div>' if $premium;
$body .= '</div>';
$body .= '<div style="width: 100%; text-align: center; clear: both">';
$body .= '  <input type="image" src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" style="margin-right:7px;" />';
$body .= '</div></div></form>';

return;
_code?>

<?page
title=>Paid Accounts
body=><?_code return $body; _code?>
page?>
