<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code
{
    use strict;
    use vars qw($title $body $head $bodyopts %POST %GET);

    $title = 'Create Icon';

    my $remote = LJ::get_remote();
    unless ($remote) {
        $body = "<?needlogin?>";
        return;
    }

    LJ::need_res(qw(
        js/core.js
        js/dom.js
        js/image-region-select.js
    ));

    # optional suffix, for beta testing.  can be removed soon after 2006-03-29
    my $sfx = $GET{'sfx'} || "";
    $sfx = "" unless $sfx =~ /^[\-\w]{1,10}$/;

    my $w = int($GET{'imageWidth'});
    my $h = int($GET{'imageHeight'});

    my $scaledSizeMax = 640;

    if (!$w || !$h) {
        # we do not have the width and height passed in, we have to compute it ourselves
        my $upf = LJ::get_upf_scaled(size => $scaledSizeMax, userid => $remote->{userid}, mogkey => "upf_$GET{index}:$remote->{userid}");
        ($w, $h) = ($upf->[2], $upf->[3]) if ($upf && $upf->[2]);
    }

    my $picpath = $LJ::SITEROOT . "/misc/mogupic?size=$scaledSizeMax&authas=$GET{authas}&index=$GET{index}";

    $head .= qq {
        <script>
                var origW = $w;
                var origH = $h;
                var scaledSizeMax = $scaledSizeMax;
        </script>
        };

    $head .= q {
        <script>
        var regsel;
        var borderOn = false;

        function onRegionChange (c) {
            updatePreview(c);
        }

        function onRegionChanged (c) {
            if (!c.x2 && !c.y2) return;

            updatePreview(c);

            $("x1").value = c.x1;
            $("y1").value = c.y1;
            $("x2").value = c.x2;
            $("y2").value = c.y2;
        }

        function updatePreview (c) {
            var w = c.x2 - c.x1, h = c.y2 - c.y1;

            var upp = $("userpicpreview");

            var newsizes = getSizedCoords(100, w, h);

            var zoomw = 1/(w/origW);
            var zoomh = 1/(h/origH);

            var nw = Math.floor(newsizes[0] * zoomw);
            var nh = Math.floor(newsizes[1] * zoomh);

            upp.width = nw;
            upp.height = nh;

            var zoomx = nw/origW;
            var zoomy = nh/origH;

            $("prevcon").style.width = Math.floor(newsizes[0]) + "px";
            $("prevcon").style.height = Math.floor(newsizes[1]) + "px";

            var nl = zoomx * c.x1;
            var nt = zoomy * c.y1;

            upp.style.marginLeft = "-" + Math.floor(nl) + "px";
            upp.style.marginTop = "-" + Math.floor(nt) + "px";
        }

        function setConstrain () {
          if(!regsel) return;
          var checked = $('constrain').checked;
          regsel.keepSquare(checked);
          regsel.setBottomRight(regsel.brx, regsel.bry, checked);
          regsel.fireOnRegionChanged();
        }

        function getSizedCoords (newsize, w, h) {
            var nw, nh;

            if (h > w) {
                nh = newsize;
                nw = newsize * w/h;
            } else {
                nw = newsize;
                nh = newsize * h/w;
            }
            return [nw, nh];
        }

        function toggleBorder (evt) {
          if (borderOn) {
            $("prevcon").style.border = "1px solid transparent";
            borderOn = false;
          } else {
            $("prevcon").style.border = "1px solid #000000";
            borderOn = true;
          }
        }

        DOM.addEventListener(window, "load", function () {
            if (!origW || !origH)
                return;

            $("userpic").style.display = "";

            regsel = new ImageRegionSelect({src: $("userpic"),
              onRegionChange:  onRegionChange,
              onRegionChanged: onRegionChanged
            });

            var imageDimensions = getSizedCoords(scaledSizeMax, origW, origH);
            origW = imageDimensions[0];
            origH = imageDimensions[1];
            var w = origW;
            var h = origH;

            $("picContainer").style.width = w + "px";
            $("picContainer").style.height = h + "px";

            var x1 = 20, y1 = 20, x2 = w - 20, y2 = h - 20;
            regsel.setTopLeft(x1, y1);
            regsel.setBottomRight(x2, y2);
            regsel.fireOnRegionChanged();

            regsel.keepSquare(false);

            $("createbtn").disabled = false;

            DOM.addEventListener($("borderToggle"), "change", toggleBorder.bindEventListener());
        });

    </script>

};

my ($x1, $y1, $x2, $y2) = (20, 20, $w - 20, $h - 20);

if ($GET{successcount}) {
    $body .= "<p>Uploaded $GET{successcount} picture(s) successfully.</p>";
}

$body .= qq {
    <a href="/editpics$sfx"><< Edit Icons</a>
    <noscript><p><b>
You need JavaScript in order to use the
Icon Factory. Since you have JavaScript disabled, you will be unable
to select a region or preview your icon. However, you can create an
icon-sized version of the image you uploaded by clicking on the
Create Icon button.</b></p>
    </noscript>
    };


my $upload_form = qq {
        <form enctype="multipart/form-data" action="/editpics$sfx"
        method='post'>
      From File: <input type="file" name="userpic" /><br/>
      <small>JPEG only.</small>
  } .
    LJ::html_hidden({name => 'src', value => 'file'}) .
    LJ::html_submit('Upload') . '</form>';


# is there a pic in mogile?
my @paths = LJ::mogclient()->get_paths("upf_$GET{index}:$remote->{userid}");
if (! @paths) {
    $body .= '<?p You have no picture uploaded. You must upload one: p?>';
    $body .= $upload_form;

    return;
}

if (0) {
    $body .= qq {
        <?standout
            <?p You can edit your currently uploaded picture or you can upload a new one: p?>

            $upload_form
            standout?>
        };
}

$body .= qq {
        <?p Click and drag anywhere within the photo to create your icon. When you're happy with what you see in the preview box click the Create Icon button to save it. p?>

      <div id="picContainer" style="float: left; margin-bottom: 15px; width: ${scaledSizeMax}px; height: ${scaledSizeMax}px; border: 2px solid #EEEEEE; padding: 2px;"> <img src="$picpath" id="userpic" style="display: none;" /></div>

      <?standout <div style='float: right;'>
      <form action="$LJ::SITEROOT/editpics$sfx?authas=$GET{'authas'}" method="POST" enctype='multipart/form-data'>
      <table cellpadding="4"><tr>
      <td style='whitespace: nowrap'>
        <nobr><input type="checkbox" id="constrain" onchange="setConstrain();" />
        <label for="constrain">Keep square</nobr></label><br /><small>(or hold Shift)</small>
        <br/><input type="checkbox" id="borderToggle" name="border" />
        <label for="borderToggle">Add Border</label><br />
      </td></tr><tr>
      <td valign="center"><small>Low quality preview:</small><br />
      <div style="width: 102px; height: 102px; overflow: hidden; padding: 0px;">
        <div style="width: 100px; height: 100px; overflow: hidden; display:inline; float:left; border: 1px solid transparent;"
                id="prevcon">
            <img src="$picpath" id="userpicpreview" />
        </div>
      </div>
      </td></tr></table>

      <input type="hidden" name="create" value="1" />

      <input type="hidden" name="x1" id="x1" value="$x1" />
      <input type="hidden" name="y1" id="y1" value="$y1" />
      <input type="hidden" name="x2" id="x2" value="$x2" />
      <input type="hidden" name="y2" id="y2" value="$y2" />

      <input type="hidden" name="scaledSizeMax" id="scaledSizeMax" value="$scaledSizeMax" />

      <input type="hidden" name="src" value="factory" />
      } . LJ::form_auth() . qq {

      <input type="submit" value="Create Icon"  id="createbtn" />
      } . LJ::html_hidden('keywords', $GET{'keywords'},
                          'comments', $GET{'comments'},
                          'descriptions', $GET{'descriptions'},
                          'make_default', $GET{'make_default'},
                          index => $GET{index}) . qq {
      </form></div> standout?>
    };
}
#_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

return;

_code?><?page
    title=><?_code return $title; _code?>
    head<=
    <?_code return $head; _code?>
    <=head
    bodyopts=><?_code return $bodyopts; _code?>
    body=><?_code return $body; _code?>
    page?>
