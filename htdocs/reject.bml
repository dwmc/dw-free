<?_info
nocache=>1
_info?><?page
title=><?_ml .title _ml?>

body<=
<?_code
{
    use strict;

    my $qs = BML::get_query_string();
    return LJ::bad_input($ML{'.error.invalidargument'})
        unless $qs && $qs =~ /^(\d+)\.(.+)$/;

    my ($aaid, $auth) = ($1, $2);
    my $aa = LJ::is_valid_authaction($aaid, $auth);
    return LJ::bad_input($ML{'.error.invalidargument'})
        unless $aa;
    return LJ::bad_input($ML{'.error.actionperformed'})
        if $aa->{'used'} eq 'Y';

    my $arg = {};
    LJ::decode_url_string($aa->{'arg1'}, $arg);

    ### perform actions according to the action type

    # reject someone joining a community
    if ($aa->{action} eq 'comm_join_request') {
        my $dbh = LJ::get_db_writer();

        # get user we're adding
        my $targetid = $arg->{targetid};
        return LJ::bad_input($ML{'.error.internerr.invalidaction'}) unless $targetid;

        return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.rejecting'} p?>"
            unless LJ::reject_pending_member($aa->{userid}, $targetid);

        # return success
        my $commname = LJ::get_username($aa->{userid});
        my $username = LJ::get_username($targetid);
        return "<?h1 $ML{'.comm.success'} h1?>".
               '<?p ' . BML::ml('.commreject.text', {
                           user => LJ::ljuser($username),
                           comm => LJ::ljuser($commname),
                           aopts => "href=\"$LJ::SITEROOT/community/members.bml?authas=$commname\"",
                        }) . ' p?>';
    }

    # not other action types right now
    return LJ::bad_input($ML{'.error.unknownactiontype'});
}
_code?>

<=body
page?>
