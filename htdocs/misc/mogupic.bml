<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?><?_code
{
    use strict;
    use vars qw(%GET);

    return $ML{'.error.referer'} unless LJ::check_referer('/tools/userpicfactory.bml');

    my $remote = LJ::get_remote();
    return LJ::error_noremote() unless $remote;

    my $authas = $GET{'authas'} || $remote->user;
    my $u = LJ::get_authas_user($authas) or
        return $ML{'error.invalidauth'};

    my $size = int($GET{'size'});
    $size = 640 if $size <= 0 || $size > 640;

    my $upf = LJ::get_upf_scaled(size => $size, userid => $u->id, mogkey => "upf_$GET{index}:$u->{userid}");

    return $ML{'.error.image'} unless $upf;

    my $blob = $upf->[0];
    my $mime = $upf->[1];

    BML::set_content_type($mime);
    BML::noparse();

    return $$blob;
}
_code?>

