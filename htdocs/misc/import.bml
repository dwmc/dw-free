<?page

#
# import.bml
#
# Little import helper tool.
#
# Authors:
#      Mark Smith <mark@dreamwidth.org>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#

body<=
<?_code
{
    use strict;
    use vars qw/ %GET %POST $title $windowtitle $headextra @errors @warnings /;
    use Digest::MD5 qw/ md5_hex /;

    # translated/custom page title can go here
    $title = "Import Helper";

    # for pages that require authentication
    my $remote = LJ::get_remote()
        or return "<?needlogin?>";

    # allow the remote user to authenticate as another account (community, etc)
    my $authas = $GET{authas} || $remote->user;
    my $u = LJ::get_authas_user( $authas );
    return LJ::bad_input( $ML{'error.invalidauth'} )
        unless $u;

    # verify that the beta is still happening
    return "Beta has ended, sorry!"
        unless $LJ::ENABLE_BETA_TOOLS;

    # if post, do something
    if ( LJ::did_post() ) {
        return "Invalid form."
            unless LJ::check_form_auth();

        my $un = $POST{username};
        my $pw = $POST{password};
        my $hn = $POST{hostname};
        return "Please provide a username and password."
            unless $un && $pw && $hn;

        my $dbh = LJ::get_db_writer()
            or return "Unable to connect to database.";
        my $id = LJ::alloc_user_counter( $u, "I" ) or die "can't get id for import data\n";
        $dbh->do(
            "INSERT INTO import_data (userid, import_data_id, hostname, username, password_md5) VALUES (?, ?, ?, ?, ?)",
            undef, $u->id, $id, $hn, $un, md5_hex( $pw )
        );
        return "Database error." if $dbh->err;

        my @jobs = (
            ['lj_userpics', 'ready'],
            ['lj_bio', 'ready'],
            ['lj_tags', 'ready'],
        );
        # schedule userpic, bio, and tag imports
        foreach my $item (@jobs) {
            $dbh->do(
                "INSERT INTO import_items (userid, item, status, created, import_data_id, priority) VALUES (?, ?, ?, UNIX_TIMESTAMP(), ?, UNIX_TIMESTAMP())",
                undef, $u->id, $item->[0], $item->[1], $id
            );
            return "Database error." if $dbh->err;
        }

        return BML::redirect( "$LJ::SITEROOT/misc/import.bml" );
    }

    # load up their most recent ten imports
    my $dbh = LJ::get_db_writer()
        or return "No database.";
    my $imps = $dbh->selectall_arrayref(
        'SELECT import_data_id, hostname, username, password_md5 FROM import_data WHERE userid = ? ORDER BY import_data_id DESC LIMIT 10',
        undef, $u->id
    );

    # put the data together
    my %s;
    foreach my $imp ( @$imps ) {
        my ( $impid, $host, $un, $pw ) = @$imp;
        $s{$impid} = { host => $host, user => $un, pw => $pw, items => {} };

        my $nr = $dbh->selectall_arrayref(
            'SELECT item, status, created, last_touch, priority FROM import_items WHERE userid = ? AND import_data_id = ?',
            undef, $u->id, $impid
        );
        foreach my $h ( @$nr ) {
            $s{$impid}->{items}->{$h->[0]} = {
                status => $h->[1], created => $h->[2], last_touch => $h->[3], priority => $h->[4]
            };
        }
    }

    # now dump the data out in a rather unattractive fashion
    my $refresh = "[<a href='$LJ::SITEROOT/misc/import.bml'>Refresh</a>]";
    my $ret = "<?p This page helps you import data from another site to test the importer. p?>";
    if ( scalar keys %s ) {
        $ret .= "<?h2 Import Status h2?><table width='98%'>";
        foreach my $impid ( sort { $b <=> $a } keys %s ) {
            my $h = $s{$impid};
            $ret .= "<tr><td colspan='4'>&nbsp;</td></tr>";
            $ret .= "<tr><td colspan='4' style='background-color: #cccccc;'>$refresh <strong>$h->{host}</strong> | $h->{user} | $h->{pw}</td></tr>";
            foreach my $item ( sort keys %{$h->{items}} ) {
                my $i = $h->{items}->{$item};
                $ret .= "<tr><td><em>$item</em></td>";
                my $col = { init => '#333333', ready => '#3333aa', queued => '#33aa33', failed => '#aa3333', succeeded => '#00ff00' }->{$i->{status}};
                $ret .= "<td><span style='color: $col;'>$i->{status}</span> as of " . LJ::ago_text(time() - ($i->{last_touch} || time())) . "</td>";
                $ret .= "<td>created " . LJ::ago_text(time() - $i->{created}) . "</td>";
                $ret .= "<td>priority $i->{priority}</td></tr>";
            }
        }
        $ret .= "</table><br /><br />";
    }

    # now let them do the rest...
    my $authas = LJ::make_authas_select( $remote, { authas => $u->user } );
    $ret .= "<?h2 Start Import Job h2?><?p <form method='get'>$authas</form> p?><br />";
    $ret .= "<form method='post'>" . LJ::form_auth();;

    $ret .= "<input type='text' name='username' maxlength='15'> username<br />";
    $ret .= "<input type='password' name='password' maxlength='15'> password<br />";
    $ret .= "<select name='hostname'><option value='livejournal.com'>LiveJournal.com</option></select><br />";
    $ret .= "<br />";
    $ret .= "Clicking submit below will cause import jobs to be queued to import your userpics, your ";
    $ret .= "tags, and your bio fields.  You can check this page for status.";
    $ret .= "<input type='submit' value='Do it!'></form>";
    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
windowtitle=><?_code return $windowtitle; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
