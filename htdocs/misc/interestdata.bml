<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code
{
    use strict;
    use vars qw(%GET);

    BML::set_content_type("text/plain; charset=utf-8");
    if ($GET{'user'}) {
        my $user = LJ::canonical_username($GET{'user'});
        return "! bogus username\n" unless $user;
        my $u = LJ::load_user($user);
        return "! invalid user, or no interests\n" unless $u;
        return "user is not visible" unless $u->is_visible;

        my $ret;
    
        my $ints = $u->get_interests() || [];
        foreach my $int (@$ints) {
            $ret .= "$int->[0] $int->[2] $int->[1]\n";
        }

        return "! invalid user, or no interests\n" unless $ret;
        $ret = "# Note: Polite data miners cache on their end.  Impolite ones get banned.\n" .
            "# <intid> <intcount> <interest ...>\n" .
            $ret;
        return $ret;
    }

    if ($GET{'int'}) {
        my $intid = LJ::get_sitekeyword_id( $GET{int}, 0 );
        return "! invalid interest\n" unless $intid;
        my ($int, $intcount) = LJ::get_interest( $intid );
        my $ret = "# Note: Polite data miners cache on their end.  Impolite ones get banned.\n" .
            "= intcount=$intcount\n";
        return $ret;
    }
    return "! invalid parameters\n";
}
_code?>
