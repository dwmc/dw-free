<?page

#
# beta.bml
#
# Little beta helper tool.
#
# Authors:
#      Mark Smith <mark@dreamwidth.org>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#

body<=
<?_code
{
    use strict;
    use vars qw/ %GET %POST $title $windowtitle $headextra @errors @warnings /;

    # translated/custom page title can go here
    $title = "Beta Helper";

    # for pages that require authentication
    my $remote = LJ::get_remote()
        or return "<?needlogin?>";

    # allow the remote user to authenticate as another account (community, etc)
    my $authas = $GET{authas} || $remote->user;
    my $u = LJ::get_authas_user( $authas );
    return LJ::bad_input( $ML{'error.invalidauth'} )
        unless $u;

    # verify that the beta is still happening
    return "Beta has ended, sorry!"
        unless $LJ::ENABLE_BETA_TOOLS;

    # if post, do something
    if ( LJ::did_post() ) {
        return "Invalid form."
            unless LJ::check_form_auth();

        if ( my $t = $POST{accttype} ) {
            my $caps = {
                free    => [ [ 1 ], [ 3, 4, 6 ] ],
                paid    => [ [ 3 ], [ 1, 4, 6 ] ],
                premium => [ [ 4 ], [ 1, 3, 6 ] ],
                seed    => [ [ 6 ], [ 1, 3, 4 ] ],
            }->{$t}
                or return "Invalid caps.";

            LJ::modify_caps( $u, @$caps );

            return BML::redirect( "$LJ::SITEROOT/misc/beta?authas=" . $u->user );
        }

        return "Not sure what you want me to do!";
    }

    # get current account type
    my $type = 'Unknown :(';
    $type = 'Free Account' if $u->caps & 2;
    $type = 'Paid Account' if $u->caps & 8;
    $type = 'Premium Paid Account' if $u->caps & 16;
    $type = 'Seed Account' if $u->caps & 64;

    # build the form
    my $authas = LJ::make_authas_select( $remote, { authas => $u->user } );
    my $ret = "<?p <form method='get'>$authas</form> p?><br />";
    $ret .= "<?p " . $u->ljuser_display . " is a <strong>$type</strong>. p?>";
    $ret .= <<FORM;

<form method="post">
<?p Change account type:<br />
<select name="accttype">
    <option value="free">Free Account</option>
    <option value="paid">Paid Account</option>
    <option value="premium">Premium Paid Account</option>
    <option value="seed">Seed Account</option>
</select><input type="submit" value="Do it!">

FORM

    $ret .= LJ::form_auth() . " p?></form>";
    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
windowtitle=><?_code return $windowtitle; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
