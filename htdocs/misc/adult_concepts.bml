<?page
body<=
<?_code
{
    use strict;
    use vars qw( %GET %POST $title $windowtitle $headextra @errors @warnings );

    my $r = DW::Request->get;

    BML::set_language_scope( "/misc/adult_content.bml" );
    $windowtitle = $ML{'.title.NSFW'};
    my $ret = '';
    my $returl = $r->note( 'returl' ) || $POST{ret} || $GET{ret};

    # reload this entry if the user is logged in and is not choosing to
    # hide adult content since otherwise, the user shouldn't be here
    my $remote = LJ::get_remote();
    return BML::redirect( $returl ) if $remote && $remote->hide_adult_content ne 'concepts';

    my $entry = $r->pnote( 'entry' );
    my $journal = $r->pnote( 'user' );
    my $poster = defined $entry ? $entry->poster : $journal;

    if ( LJ::did_post() && $returl ) {
        return "<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>"
            unless LJ::check_form_auth();

        DW::Logic::AdultContent->set_confirmed_pages( user => $remote, journalid => $POST{journalid}, entryid => $POST{entryid}, adult_content => 'concepts' );

        return BML::redirect( $returl );
    }

    # OpenID Server and Yadis
    if ( $journal ) {
        my $u = $journal;
        $headextra .= $u->openid_tags if $u;
    } else {
        return BML::redirect( $LJ::SITEROOT );
    }

    my $markedby;

    if ( defined $entry ) {
        $markedby = $entry->adult_content_marker;
    } else {
        $markedby = $journal->adult_content_marker;
    }

    $ret .= "<div style='background-color: #ffffd4; border: 1px solid black; padding: 0 10px;'>";
    $ret .= "<h1 style='text-align: center;'>$ML{'.title'}</h1>";
    $ret .= "<p>" . BML::ml( '.message.concepts.by' . $markedby, { journal => $journal->ljuser_display, poster => $poster->ljuser_display } ) . "</p>";
    $ret .= DW::Logic::AdultContent->interstitial_reason( $journal, $entry );
    $ret .= "</div>";
    $ret .= "<br />";

    $ret .= "<div align='center'>";
    $ret .= "<form method='POST' action='$LJ::SITEROOT/misc/adult_concepts'>";
    $ret .= LJ::form_auth();
    $ret .= LJ::html_hidden( ret => $returl, journalid => $journal->id, entryid => defined $entry ? $entry->ditemid : 0 );
    $ret .= LJ::html_submit( adult_check => $ML{'.btn.viewconfirm'} ) . " ";
    $ret .= "<a href='$LJ::SITEROOT/'>" . BML::ml( '.notconfirmed', { sitename => $LJ::SITENAMESHORT } ) . "</a>";
    $ret .= "</form>";
    $ret .= "</div>";

    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
windowtitle=><?_code return $windowtitle; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
