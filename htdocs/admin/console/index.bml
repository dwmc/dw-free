<?_c
#
# admin/console/index.bml
#
# Frontend for the Admin Console, which lets you batch-process jobs with
# a command-line interface. 
#
# Authors:
#      Denise Paolucci <denise@dreamwidth.org>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#
_c?><?page
body<=
<?_code
{
    use strict;
    use vars qw/ %POST $title @errors /;

    # translated/custom page title can go here
    $title = $ML{'.title'};

    # for pages that require authentication
    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $ret;
    my $commands = $POST{commands};

    if ( LJ::did_post() ) {
        return $ML{'.error.nopost'} unless LJ::check_form_auth();

        $ret .= "<p>" . BML::ml( '.description.reference', { aopts => "href='reference.bml'" } ) . "</p>";
        $ret .= LJ::Console->run_commands_html( $commands );

    } else {

        $ret .= "<p>$ML{'.description'}</p>";
        $ret .= "<p>" . BML::ml( '.description.reference', { aopts => "href='reference.bml'" } ) . "</p>";

    }

        $ret .= "<br /><p>$ML{'.entercommands'}</p>";

        $ret .= "<form method='post' action='index.bml'>";
        $ret .= LJ::form_auth();
        $ret .= "<div class='console'>";
        $ret .= LJ::html_textarea({ 
            name => 'commands', 
            rows =>'10', 
            cols => '70', 
            wrap => 'soft', 
        });

        $ret .= "</div>";

        $ret .= LJ::html_submit( $ML{'.execute'} );
        $ret .= "</form>";

        return $ret;

}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<style type='text/css'>
  <!--
    table { margin-bottom: 5px; margin-top: 5px; }
    table td { padding: 5px; border: 1px groove #000; }
  -->
</style>
<=head
page?>
