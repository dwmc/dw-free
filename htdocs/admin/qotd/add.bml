<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?page
body<=
<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use Class::Autouse qw( LJ::QotD );

    my $remote = LJ::get_remote();
    my @displayprivs = ( "siteadmin:qotd", "siteadmin:*" );
    my $numprivs = @displayprivs;

    return "<?needlogin?>"
        unless $remote;

    return BML::ml( "admin.noprivserror", { numprivs => $numprivs, needprivs => "<b>" . join(", ", @displayprivs) . "</b>"} )
        unless $remote->has_priv( 'siteadmin', 'qotd' ) || $LJ::IS_DEV_SERVER;

    my $ret = "";

    # add a spotlight
    LJ::Widget->handle_post(\%POST, qw(AddQotD));

    # QotD preview
    $ret .= "<div style='float: right; width: 400px; border: 1px solid'>";
    $ret .= LJ::Widget::QotD->render . "</div>";
    
    # add question form
    $ret .= LJ::Widget::AddQotD->render( qid => $GET{qid} );

    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
