<?_c
#
# admin/index.bml
#
# Because blank index files annoy me. Lists all pages $remote has privs
# to view; does not show the link if you can't use it.
#
# Authors:
#      Denise Paolucci <denise@dreamwidth.org>
#      Sophie Hamilton <dw-bugzilla@theblob.org>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#
_c?><?page
body<=
<?_code
{
    use strict;
    use vars qw/ %GET %POST $title $windowtitle @errors @warnings /;

    # translated/custom page title can go here
    $title = "<?_ml .admin.title _ml?>";
    $windowtitle = "<?_ml .admin.title _ml?>";

    # for pages that require authentication
    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $ret;

    my @adminpages = (
        [ 'capedit',
            '<?_ml .admin.capability.link _ml?>', '<?_ml .admin.capability.text _ml?>', [ 'admin:*', sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'clusterstatus',
            '<?_ml .admin.cluster.link _ml?>', '<?_ml .admin.cluster.text _ml?>', [ 'supporthelp' ] ],
        [ 'console/',
            '<?_ml .admin.console.link _ml?>', '<?_ml .admin.console.text _ml?>' ],
        [ 'schema/',
            '<?_ml .admin.dbschema.link _ml?>', '<?_ml .admin.dbschema.text _ml?>', [ 'schemadoc' ] ],
        [ 'dupkiller',
            '<?_ml .admin.dupkiller.link _ml?>', '<?_ml .admin.dupkiller.text _ml?>', [ 'supporthelp' ] ],
        [ 'entryprops',
            '<?_ml .admin.entryprops.link _ml?>', '<?_ml .admin.entryprops.text _ml?>', [ 'canview:entryprops', 'canview:*', sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'faq/',
            '<?_ml .admin.faq.link _ml?>', '<?_ml .admin.faq.text _ml?>', [ 'faqadd', 'faqedit', 'faqcat' ] ],
        [ 'fileedit/',
            '<?_ml .admin.file_edit.link _ml?>', 'Allows you to edit various include files.', [ 'fileedit' ] ],
        [ 'invites/', '<?_ml .admin.invites.link _ml?>', '<?_ml .admin.invites.text _ml?>', [ 'finduser:codetrace', 'finduser:*', 'payments' ] ],
        [ 'logout_user',
            '<?_ml .admin.logout_user.link _ml?>', '<?_ml .admin.logout_user.text _ml?>', [ 'suspend' ] ],
        [ 'memcache',
            '<?_ml .admin.memcache.link _ml?>', '<?_ml .admin.memcache.text _ml?>', [ 'siteadmin:memcacheview', 'siteadmin:*' ] ],
        [ 'memcache_view',
            '<?_ml .admin.memcache_view.link _ml?>', '<?_ml .admin.memcache_view.text _ml?>', [ 'siteadmin:memcacheview', 'siteadmin:*', sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'mysql_status',
            '<?_ml .admin.mysql.link _ml?>', '<?_ml .admin.mysql.text _ml?>', [ 'siteadmin:mysqlstatus', 'siteadmin:*' ] ],
        [ 'navtag',
            '<?_ml .admin.navtag.link _ml?>', '<?_ml .admin.navtag.text _ml?>', [ 'siteadmin:navtag', 'siteadmin:*' ] ],
        [ 'pay/',
            '<?_ml .admin.pay.link _ml?>', '<?_ml .admin.pay.text _ml?>', [ 'payments' ] ],
        [ 'priv/',
            '<?_ml .admin.priv.link _ml?>', '<?_ml .admin.priv.text _ml?>' ],
        [ 'propedit',
            '<?_ml .admin.propedit.link _ml?>', '<?_ml .admin.propedit.text _ml?>', [ 'canview:userprops', 'canview:*' ] ],
        [ 'recent_comments',
            '<?_ml .admin.recent_comments.link _ml?>', '<?_ml .admin.recent_comments.text _ml?>', [ 'siteadmin:commentview', 'siteadmin:*' ] ],
        [ 'sitemessages/add',
            '<?_ml .admin.sitemessages_add.link _ml?>', '<?_ml .admin.sitemessages_add.text _ml?>', [ 'siteadmin:sitemessages', 'siteadmin:*', sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'sitemessages/manage',
            '<?_ml .admin.sitemessages_manage.link _ml?>', '<?_ml .admin.sitemessages_manage.text _ml?>', [ 'siteadmin:sitemessages', 'siteadmin:*', sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'spamreports',
            '<?_ml .admin.spamreports.link _ml?>', '<?_ml .admin.spamreports.text _ml?>', [ 'siteadmin:spamreports', 'siteadmin:*' ] ],
        [ 'stats',
            '<?_ml .admin.stats.link _ml?>', '<?_ml .admin.stats.text _ml?>', [ 'payments' ] ],
        [ 'statushistory',
            '<?_ml .admin.statushistory.link _ml?>', '<?_ml .admin.statushistory.text _ml?>', [ 'historyview', sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'styleinfo',
            '<?_ml .admin.styleinfo.link _ml?>', '<?_ml .admin.styleinfo.text _ml?>', [ sub {
                return ( LJ::Support::has_any_support_priv($remote), "<?_ml .anysupportpriv _ml?>" );
            }, sub {
                return ( $LJ::IS_DEV_SERVER, "<?_ml .devserver _ml?>" );
            } ] ],
        [ 'sysban',
            '<?_ml .admin.sysban.link _ml?>', '<?_ml .admin.sysban.text _ml?>', [ 'sysban' ] ],
        [ 'theschwartz',
            '<?_ml .admin.theschwartz.link _ml?>', '<?_ml .admin.theschwartz.text _ml?>', [ 'siteadmin:theschwartz' ] ],
        [ 'translate/',
            '<?_ml .admin.translate.link _ml?>', '<?_ml .admin.translate.text _ml?>' ],
        [ 'userlog',
            '<?_ml .admin.userlog.link _ml?>', '<?_ml .admin.userlog.text _ml?>', [ 'canview:userlog', 'canview:*' ] ],
    );

    $ret .= "<ul>\n";

    my $adminstar = $remote && $remote->has_priv( 'admin', '*' );
    foreach my $page ( @adminpages ) {
        my ( $path, $name, $description, $privs ) = @{$page};
        my $showpage = 0;
        my ( @needsprivs, @gotprivs );
        my $haspriv = 0;
        foreach my $priv ( @{$privs} ) {
            my $result = ( ref( $priv ) eq "CODE" ?
                             ( $priv->() )[0] :
                             $remote && $remote->has_priv( split( /:/, $priv ) ) );
            my $displayedpriv = ( ref( $priv ) eq "CODE" ? ( $priv->() )[1] : $priv );
            push( @gotprivs,   $displayedpriv ) if $result;
            push( @needsprivs, $displayedpriv ) if !$result;
            $haspriv  = 1 if $result;
            $showpage = 1 if $adminstar || $result;
        }
        if ( @{$privs} == 0 ) {
            $showpage = 1;
            $haspriv  = 1;
        }
        if ( $showpage ) {
            my $needspriv = ( $haspriv ? "" : " needspriv" );
            my $privreason = "";
            if ( @gotprivs || @needsprivs ) {
                my $needpriv = ( @needsprivs > 1 ? "<?_ml .needs_one_of _ml?>" : "<?_ml .needspriv _ml?>" );
                $privreason = ( $haspriv ? "(<b>"  . join( "</b>, <b>", @gotprivs   ) . "</b>)"
                                         : "($needpriv: <b>" . join( "</b>, <b>", @needsprivs ) . "</b>)" );
            }
            $ret .= "<li class='item$needspriv'><div class='itemhead'><a href='$path'>$name</a> <span class='itemprivs'>$privreason</span></div><div class='itemdef'>$description</div></li>\n";
        }
    }

    $ret .= "</ul>";

    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
windowtitle=><?_code return $windowtitle; _code?>
head<=
<style type="text/css">
.item {margin-bottom: 15px;}
.item.needspriv div, .item.needspriv a {color: #A0A0A0;}
.itemhead {font-size: bigger; font-weight: bold;}
.itemdef {margin-left: 2em;}
.itemprivs {font-size: smaller; font-weight: normal; color: #707070;}
</style>
<=head
page?>
